{"version":3,"file":"map-info-window.d.ts","sources":["map-info-window.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// <reference types=\"googlemaps\" />\nimport { ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMap } from '../google-map/google-map';\nimport { MapAnchorPoint } from '../map-anchor-point';\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nexport declare class MapInfoWindow implements OnInit, OnDestroy {\n    private readonly _googleMap;\n    private _elementRef;\n    private _ngZone;\n    private _eventManager;\n    private readonly _options;\n    private readonly _position;\n    private readonly _destroy;\n    /**\n     * Underlying google.maps.InfoWindow\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n     */\n    infoWindow?: google.maps.InfoWindow;\n    set options(options: google.maps.InfoWindowOptions);\n    set position(position: google.maps.LatLngLiteral | google.maps.LatLng);\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n    readonly closeclick: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n    readonly contentChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n    readonly domready: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n    readonly positionChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n    readonly zindexChanged: Observable<void>;\n    constructor(_googleMap: GoogleMap, _elementRef: ElementRef<HTMLElement>, _ngZone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close(): void;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent(): string | Node;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition(): google.maps.LatLng | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex(): number;\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor?: MapAnchorPoint): void;\n    private _combineOptions;\n    private _watchForOptionsChanges;\n    private _watchForPositionChanges;\n    private _assertInitialized;\n}\n"]}