{"version":3,"file":"google-maps.js","sources":["../../../../../../src/google-maps/map-event-manager.ts","../../../../../../src/google-maps/google-map/google-map.ts","../../../../../../src/google-maps/map-base-layer.ts","../../../../../../src/google-maps/map-bicycling-layer/map-bicycling-layer.ts","../../../../../../src/google-maps/map-circle/map-circle.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-renderer.ts","../../../../../../src/google-maps/map-ground-overlay/map-ground-overlay.ts","../../../../../../src/google-maps/map-info-window/map-info-window.ts","../../../../../../src/google-maps/map-kml-layer/map-kml-layer.ts","../../../../../../src/google-maps/map-marker/map-marker.ts","../../../../../../src/google-maps/map-marker-clusterer/map-marker-clusterer.ts","../../../../../../src/google-maps/map-polygon/map-polygon.ts","../../../../../../src/google-maps/map-polyline/map-polyline.ts","../../../../../../src/google-maps/map-rectangle/map-rectangle.ts","../../../../../../src/google-maps/map-traffic-layer/map-traffic-layer.ts","../../../../../../src/google-maps/map-transit-layer/map-transit-layer.ts","../../../../../../src/google-maps/map-heatmap-layer/map-heatmap-layer.ts","../../../../../../src/google-maps/google-maps-module.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-service.ts","../../../../../../src/google-maps/map-geocoder/map-geocoder.ts","../../../../../../src/google-maps/public-api.ts","../../../../../../src/google-maps/index.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;;;;AACA,MAAa,eAAe;AAC5B,IAcE,YAAoB,OAAe;AAAI,QAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC;AAEiC,QAf7D,aAAQ,GAA+D,EAAE,CAAC;AACpF,QAAU,eAAU,GAAoC,EAAE,CAAC;AAC3D,QAAU,kBAAa,GAAG,IAAI,eAAe,CAAwB,SAAS,CAAC,CAAC;AAChF,KAUyC;AACzC;AAC2D,IAVjD,eAAe;AACzB,QAAI,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC5C,YAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;AACxB,SAAK;AACL,QACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACzB,KAAG;AACH;AAG2D,IACzD,cAAc,CAAI,IAAY;AAAI,QAChC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;AACnD,YAAM,MAAM,UAAU,GAAG,IAAI,UAAU,CAAI,QAAQ;AACnD;AACQ,gBAAA,IAAI,CAAC,MAAM,EAAE;AACrB,oBAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;AACrD,oBAAU,OAAO,SAAS,CAAC;AAC3B,iBAAS;AACT,gBACQ,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,KAAQ;AAC3D,oBAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACvD,iBAAS,CAAC,CAAC;AACX,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvC,gBAAQ,OAAO,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvC,aAAO,CAAC,CAAC;AACT,YACM,OAAO,UAAU,CAAC;AACxB,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH;AAEC,IAAC,SAAS,CAAC,MAA6B;AACzC,QAAI,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;AACnD,QACI,IAAI,MAAM,KAAK,aAAa,EAAE;AAClC,YAAM,OAAO;AACb,SAAK;AACL;AAEG,QAAC,IAAI,aAAa,EAAE;AACvB,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC;AAC7B,YAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACzB,SAAK;AACL,QACI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC;AAEG,QAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9F,QAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AACH;AAEC,IAAC,OAAO;AACT,QAAI,IAAI,CAAC,eAAe,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,QAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;AAClC,KAAG;AACH;AACA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;AACO,MAAM,eAAe,GAA2B;AACvD,IAAE,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAC;AAC5C,IAAE,IAAI,EAAE,EAAE;AACV;AACE,IAAA,SAAS,EAAE,SAA6C;AAC1D,CAAC,CAAC;AAEF;AACO,MAAM,cAAc,GAAG,OAAO,CAAC;AACtC;AACO,MAAM,aAAa,GAAG,OAAO,CAAC;AAErC;AACA;AACA;AACA;AACA;AACA,MAOa,SAAS;AAAG,IAmLvB,YACmB,WAAuB,EAChC,OAAe,EACF,UAAkB;AAC3C,QAHqB,gBAAW,GAAX,WAAW,CAAY;AAAC,QACjC,YAAO,GAAP,OAAO,CAAQ;AAAC,QApLlB,kBAAa,GAAoB,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7E;AACuE,QAa5D,WAAM,GAA2B,cAAc,CAAC;AAC3D;AAEK,QAAM,UAAK,GAA2B,aAAa,CAAC;AACzD,QAuBU,aAAQ,GAAG,eAAe,CAAC;AACrC;AAEK;AACM;AAEA;AAAY,QAAD,gBAAW,GAAuB,IAAI,YAAY,EAAQ,CAAC;AACjF;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE;AAEK;AACM;AAEA;AAAY,QAAF,aAAQ,GACvB,IAAI,CAAC,aAAa;AACxB,aAAW,cAAc,CAAuD,OAAO,CAAC,CAAC;AACzF;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,YAAO,GACtB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,MAAM,CAAC,CAAC;AACtD;AAEK;AACM;AAEA;AAAY,QAAF,eAAU,GACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,SAAS,CAAC,CAAC;AACzD;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,WAAW,CAAC,CAAC;AAC3D;AAEK;AACM;AAEA;AAAY,QAAF,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;AACjE;AAEK;AACM;AAEA;AAAY,QAAF,SAAI,GACnB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,MAAM,CAAC,CAAC;AACtD;AAEK;AACM;AAEA;AAAY,QAAF,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;AACnE;AAEK;AACM;AAEA;AACA,QAAA,iBAAY,GACjB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,oBAAoB,CAAC,CAAC;AACpE;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,YAAY,CAAC,CAAC;AACjF;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,aAAa,CAAC,CAAC;AAC7D;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;AAC9D;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;AAC9D,QAMI,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;AACpD,QACI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,MAAM,gBAAgB,GAAqB,MAAM,CAAC;AACxD,YAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,EAAE;AACvF,gBAAQ,MAAM,KAAK,CACP,+DAA+D;AAC3E,oBAAY,sDAAsD;AAClE,oBAAY,8DAA8D;AAC1E,oBAAY,+BAA+B,CAAC,CAAC;AAC7C,aAAO;AACP,YACM,IAAI,CAAC,4BAA4B,GAAG,gBAAgB,CAAC,cAAc,CAAC;AAC1E,YAAM,gBAAgB,CAAC,cAAc,GAAG;AACxC,gBAAQ,IAAI,IAAI,CAAC,4BAA4B,EAAE;AAC/C,oBAAU,IAAI,CAAC,4BAA4B,EAAE,CAAC;AAC9C,iBAAS;AACT,gBAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AAChC,aAAO,CAAC;AACR,SAAK;AACL,KAAG;AACH,IAlLE,IACI,MAAM,CAAC,MAAoD;AACjE,QAAI,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC1B,KAAG;AACH,IAEE,IACI,IAAI,CAAC,IAAY;AACvB,QAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,KAAG;AACH,IAEE,IACI,OAAO,CAAC,OAA+B;AAC7C,QAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,eAAe,CAAC;AAC/C,KAAG;AACH,IAmKE,WAAW,CAAC,OAAsB;AACpC,QAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAC/C,YAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,SAAK;AACL,QACI,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACrC,QACI,IAAI,SAAS,EAAE;AACnB,YAAM,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9B,gBAAQ,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACrD,aAAO;AACP,YACM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;AAC7C,gBAAQ,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1C,aAAO;AACP;AAEK,YAAC,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;AACjD,gBAAQ,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,aAAO;AACP,YACM,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;AAClD,gBAAQ,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/C,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,QAAQ;AACV;AACI,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAE,CAAC;AACpF,YAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB;AAEK;AACM;AACM,YAAX,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACrC,gBAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAClF,aAAO,CAAC,CAAC;AACT,YAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QACI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,MAAM,gBAAgB,GAAqB,MAAM,CAAC;AACxD,YAAM,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,4BAA4B,CAAC;AAC1E,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS,CACL,MAAgE,EAChE,OAAoC;AAC1C,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,KAAK,CAAC,CAAS,EAAE,CAAS;AAC5B,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,KAAK,CAAC,MAAoD;AAC5D,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACjC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,WAAW,CACP,YAAsE,EACtE,OAAoC;AAC1C,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AACtD,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,iBAAiB;AAAK,QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,aAAa;AAAK,QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,aAAa;AAAK,QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,OAAO;AAAK,QACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;AACpC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,OAAO;AAAK,QACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;AACpC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,IAAI,QAAQ;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,IAAI,IAAI;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,IAAI,QAAQ;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,IAAI,eAAe;AAAK,QACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AAC1C,KAAG;AACH,IACU,QAAQ;AAClB,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACvC,YAAM,MAAM,CAAC,MAAM;AACnB,gBAAU,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,IAAI,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,cAAc,CAAC,CAAC;AAC3F,YAAM,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,IAAI,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CAAC;AACnG,SAAK;AACL,KAAG;AACH;AAEC,IAAS,eAAe;AAAK;AAAoB,QAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;AACxC,QAAI,uCACK,OAAO;AACZ;AACM;AACM,YAAV,MAAM,EAAE,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,eAAe,CAAC,MAAM,EAChE,IAAI,EAAE,MAAA,MAAA,IAAI,CAAC,KAAK,mCAAI,OAAO,CAAC,IAAI,mCAAI,eAAe,CAAC,IAAI;AAC7D;AACM;AACM,YAAP,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,IAAI,eAAe,CAAC,SAAS,IAC3E;AACN,KAAG;AACH;AAEC,IAAS,kBAAkB;AAAK,QAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,EAAE;AAC5E,YAAM,MAAM,KAAK,CAAC,4EAA4E;AAC9F,gBAAkB,oEAAoE,CAAC,CAAC;AACxF,SAAK;AACL,KAAG;AACH;qCArcC,SAAS,SAAC,kBACT,QAAQ,EAAE,YAAY,kBACtB,QAAQ,EAAE,WAAW,kBACrB,eAAe,EAAE,uBAAuB,CAAC,MAAM;WAC/C,QAAQ,EAAE,4DAA4D,kBACtE,aAAa,EAAE,iBAAiB,CAAC,IAAI,cACtC;;;;iDACI;AAAC;AAAmC,YA/CvC,UAAU;AACV,YAQA,MAAM;AACN,YA2NmC,MAAM,uBAAtC,MAAM,SAAC,WAAW;AAAQ;AAAG;AAEnB,qBAxKZ,KAAK;AAAK,oBAGV,KAAK;AAAK,wBAMV,KAAK;AAAK,qBAEV,KAAK;AACN,mBAKC,KAAK;AACN,sBAKC,KAAK;AACN,0BASE,MAAM;AAAK,4BAMZ,MAAM;AAAK,4BAOX,MAAM;AAAK,uBAOX,MAAM;AAAK,0BAQX,MAAM;AAAK,sBAOX,MAAM;AAAK,yBAOX,MAAM;AAAK,2BAOX,MAAM;AAAK,6BAOX,MAAM;AAAK,mBAOX,MAAM;AAAK,+BAOX,MAAM;AAAK,2BAOX,MAAM;AACP,0BAOC,MAAM;AAAK,2BAOX,MAAM;AAAK,gCAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,0BAOX,MAAM;AAAK,0BAOX,MAAM;AAAK,0BAOX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAgRf,MAAM,eAAe,GAAG,eAAe,CAAC;AAExC;AACA,SAAS,mBAAmB,CAAC,KAAU;AAAI,IACzC,IAAI,KAAK,IAAI,IAAI,EAAE;AACrB,QAAI,OAAO,EAAE,CAAC;AACd,KAAG;AACH,IACE,OAAO,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC;AAC5D;AACA;ACvgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAYa,YAAY;AAAG,IAC1B,YAA+B,IAAe,EAAqB,OAAe;AAAI,QAAvD,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAoB,YAAO,GAAP,OAAO,CAAQ;AAAC,KAAG;AACxF,IACE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACrC,gBAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,aAAO,CAAC,CAAC;AACT,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,OAAO,EAAE,CAAC;AACrB,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AACH,IACU,kBAAkB;AAC5B,QAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC9B,YAAM,MAAM,KAAK,CACP,4EAA4E;AACtF,gBAAU,oEAAoE,CAAC,CAAC;AAChF,SAAK;AACL,KAAG;AACH,IACY,iBAAiB,MAAK;AAClC,IAAY,OAAO,MAAK;AACxB,IAAY,SAAS,MAAK;AAC1B;wCAhCC,SAAS,SAAC,kBACT,QAAQ,EAAE,gBAAgB,kBAC1B,QAAQ,EAAE,cAAc,eACzB;gJACI;AAAC;AAAsC,YANpC,SAAS;AAAI,YAFF,MAAM;AAAG;;;;;;;4FAAE;AAAC;ACX/B;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA,MAIa,iBAAkB,SAAQ,YAAY;AACnD,IAOqB,iBAAiB;AACtC,QAAI,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;AAC3D,KAAG;AACH,IACqB,OAAO;AAC5B,QAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACnC,QAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACrD,KAAG;AACH,IACqB,SAAS;AAC9B,QAAI,IAAI,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,SAAK;AACL,KAAG;AACH,IACU,uBAAuB;AAAK,QAClC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AAC9B,YAAM,MAAM,KAAK,CACP,oFAAoF;AAC9F,gBAAU,8EAA8E,CAAC,CAAC;AAC1F,SAAK;AACL,KAAG;AACH;6CAlCC,SAAS,SAAC,kBACT,QAAQ,EAAE,qBAAqB,kBAC/B,QAAQ,EAAE,mBAAmB,eAC9B;;;;;;;;0BACI;AAAC;ACxBN;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA,MAIa,SAAS;AAAG,IA0HvB,YAA6B,IAAe,EAAmB,OAAe;AAAI,QAArD,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAkB,YAAO,GAAP,OAAO,CAAQ;AAAC,QAzHvE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAmB,aAAQ,GAAG,IAAI,eAAe,CAA4B,EAAE,CAAC,CAAC;AACjF,QAAmB,YAAO,GACpB,IAAI,eAAe,CAAyD,SAAS,CAAC,CAAC;AAC7F,QAAmB,YAAO,GAAG,IAAI,eAAe,CAAmB,SAAS,CAAC,CAAC;AAC9E,QACmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD;AAEK;AAAgB;AAEuD;AAC3E,QAsBoB,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,OAAO,CAAC,CAAC;AAC5E;AAEK;AACM;AAEA;AAAY,QAAF,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,eAAU,GACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,MAAM,CAAC,CAAC;AAC3E;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AACM;AAEA;AAAY,QAAF,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE;AAEK;AACM;AAEA;AAAY,QAAF,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,YAAY,CAAC,CAAC;AACjF,KACoF;AACpF,IA3GE,IACI,OAAO,CAAC,OAAkC;AAChD,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACtC,KAAG;AACH,IACE,IACI,MAAM,CAAC,MAAoD;AACjE,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAG;AACH,IACE,IACI,MAAM,CAAC,MAAc;AAC3B,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAG;AACH,IA8FE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ;AACQ;AACQ,gBAAhB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACvC,oBAAU,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACxD,iBAAS,CAAC,CAAC;AACX,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACjD,gBAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACpC,YAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACpC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;AACpC,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACrE,aAAS,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;AAC5C,YAAU,MAAM,eAAe,mCAChB,OAAO,KACV,MAAM,EAAE,MAAM,IAAI,OAAO,CAAC,MAAM,EAChC,MAAM,EAAE,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC,MAAM,GACvD,CAAC;AACZ,YAAU,OAAO,eAAe,CAAC;AACjC,SAAS,CAAC,CAAC,CAAC;AACZ,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AACpE,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACtC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,sBAAsB;AAChC,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;AAClE,YAAM,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACtC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,sBAAsB;AAChC,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;AAClE,YAAM,IAAI,MAAM,KAAK,SAAS,EAAE;AAChC,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACtC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAQ,MAAM,KAAK,CACT,4EAA4E;AACtF,oBAAU,oEAAoE,CAAC,CAAC;AAChF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACxB,gBAAQ,MAAM,KAAK,CACT,8DAA8D;AACxE,oBAAU,oFAAoF,CAAC,CAAC;AAChG,aAAO;AACP,SAAK;AACL,KAAG;AACH;qCAtQC,SAAS,SAAC,kBACT,QAAQ,EAAE,YAAY,kBACtB,QAAQ,EAAE,WAAW,eACtB;ooBACI;AAAC;AAAmC,YAXjC,SAAS;AAAI,YAJK,MAAM;AAAG;AAAG;AAA6B,sBA+BhE,KAAK;AACN,qBAIC,KAAK;AACN,qBAIC,KAAK;AACN,4BAQC,MAAM;AAAK,0BAOX,MAAM;AAAK,6BAOX,MAAM;AAAK,yBAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,8BAOX,MAAM;AAAK,8BAOX,MAAM;AAAK,8BAOX,MAAM;AAAK,6BAOX,MAAM;AAAK,8BAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,+BAOX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;ACjJhB;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA,MAIa,qBAAqB;AAAG,IAkCnC,YAA6B,UAAqB,EAAU,OAAe;AAAI,QAAlD,eAAU,GAAV,UAAU,CAAW;AAAC,QAAS,YAAO,GAAP,OAAO,CAAQ;AAAC,QAjCpE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D;AAEK;AACM;AAGV;AAAY,QAoBF,sBAAiB,GACtB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,oBAAoB,CAAC,CAAC;AACpE,KAIiF;AACjF;AACO;AAE+B;AAA6C;AAClF,IAhCC,IACI,UAAU,CAAC,UAAwC;AACzD,QAAI,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,KAAG;AACH;AAAQ;AAGwB;AAAkC;AAAQ,IAGxE,IACI,OAAO,CAAC,OAA8C;AAC5D,QAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,KAAG;AACH,IAeE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;AACpC;AACM;AACM;AACM,YAAZ,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACrC,gBAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAC7F,aAAO,CAAC,CAAC;AACT,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,CAAC;AACjE,YAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC5D,SAAK;AACL,KAAG;AACH,IACE,WAAW,CAAC,OAAsB;AACpC,QAAI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9B,gBAAQ,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACnE,aAAO;AACP,YACM,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;AACnE,gBAAQ,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChE,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,aAAa;AAAK,QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AACnD,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,QAAQ;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,aAAa;AAAK,QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AACnD,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;AACxC,QAAI,uCACK,OAAO,KACV,UAAU,EAAE,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,EAClD,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,IAC9B;AACN,KAAG;AACH,IACU,kBAAkB;AAC3B,QACG,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;AACtC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;AACpC,gBAAQ,MAAM,KAAK,CACP,2EAA2E;AACvF,oBAAY,6EAA6E;AACzF,oBAAY,sBAAsB,CAAC,CAAC;AACpC,aAAO;AACP,SAAK;AACL,KAAG;AACH;iDA7HC,SAAS,SAAC,kBACT,QAAQ,EAAE,yBAAyB,kBACnC,QAAQ,EAAE,uBAAuB,eAClC;4UACI;AAAC;AAA+C,YAb7C,SAAS;AAAI,YARnB,MAAM;AACP;AAAG;AAGK,yBAwBN,KAAK;AACN,sBASC,KAAK;AACN,gCASC,MAAM;AACR;;;;;;;;;;;;;oBAAE;AAAC;AC/DJ;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA,MAIa,gBAAgB;AAAG,IAwD9B,YAA6B,IAAe,EAAmB,OAAe;AAAI,QAArD,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAkB,YAAO,GAAP,OAAO,CAAQ;AAAC,QAvDvE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QACmB,aAAQ,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;AAC7D,QAAmB,SAAI,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;AAC1D,QAAmB,YAAO,GACpB,IAAI,eAAe,CACf,SAAS,CAAC,CAAC;AACrB,QAAmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD;AAEyC,QAsB9B,cAAS,GAAY,KAAK,CAAC;AACtC;AACW;AAAe;AAQvB;AAAY,QAEM,aAAQ,GACvB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,OAAO,CAAC,CAAC;AAC5E;AAEK;AACM;AACM;AAEA;AAAY,QAAR,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E,KACoF;AACpF;AAGe,IA1Cb,IACI,GAAG,CAAC,GAAW;AACrB,QAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,KAAG;AACH;AAEC,IAAC,IACI,MAAM;AAAK,QACb,OAAO,IAAI,CAAC,OAAO,CAAC,KAAM,CAAC;AAC/B,KAAG;AACH,IAAE,IAAI,MAAM,CAAC,MAAgE;AAC7E,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAG;AACH;AACkC,IAIhC,IACI,OAAO,CAAC,OAAe;AAC7B,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChC,KAAG;AACH,IAkBE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B;AACM;AACM;AACM,YAAZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;AACpE,gBAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,oBAAU,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1C,oBAAU,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;AACzC,iBAAS;AACT;AAEO;AACQ;AAEd,gBADO,IAAI,MAAM,EAAE;AACpB,oBAAU,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACzC,wBAAY,IAAI,CAAC,aAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE;AAC7F,4BAAc,SAAS,EAAE,IAAI,CAAC,SAAS;AACvC,4BAAc,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;AAC1C,yBAAa,CAAC,CAAC;AACf,qBAAW,CAAC,CAAC;AACb,oBAAU,IAAI,CAAC,kBAAkB,EAAE,CAAC;AACpC,oBAAU,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AAC1D,oBAAU,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC3D,iBAAS;AACT,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B,YAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAP,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAP,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAP,MAAM;AAAK,QACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;AACvC,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AACpE,YAAM,IAAI,OAAO,IAAI,IAAI,EAAE;AAC3B,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC/C,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,mBAAmB;AAC7B,QAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG;AAC5D,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;AACzC,YAAM,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC9B;AAEK,YAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3B,YAAM,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AAC3C,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AAC/B,gBAAQ,MAAM,KAAK,CACP,kFAAkF;AAC9F,oBAAY,8EAA8E,CAAC,CAAC;AAC5F,aAAO;AACP,SAAK;AACL,KAAG;AACH;4CAxKC,SAAS,SAAC,kBACT,QAAQ,EAAE,oBAAoB,kBAC9B,QAAQ,EAAE,kBAAkB,eAC7B;qTACI;AAAC;AAA0C,YAZxC,SAAS;AAAI,YAJK,MAAM;AAAG;AAAG;AAAoC,kBAkCvE,KAAK;AACN,qBAKC,KAAK;AACN,wBAQC,KAAK;AAAK,sBAGV,KAAK;AACN,uBAQC,MAAM;AAAK,0BAQX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AChFhB;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA,MAKa,aAAa;AAAG,IA8D3B,YAA6B,UAAqB,EAC9B,WAAoC,EACpC,OAAe;AAAI,QAFV,eAAU,GAAV,UAAU,CAAW;AAAC,QAC/B,gBAAW,GAAX,WAAW,CAAyB;AAAC,QACrC,YAAO,GAAP,OAAO,CAAQ;AAAC,QA/D5B,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAmB,aAAQ,GAAG,IAAI,eAAe,CAAgC,EAAE,CAAC,CAAC;AACrF,QAAmB,cAAS,GACtB,IAAI,eAAe,CAAyD,SAAS,CAAC,CAAC;AAC7F,QAAmB,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AAClD;AAEK;AAAe;AAE+D;AAClF,QAiBoB,eAAU,GACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,YAAY,CAAC,CAAC;AAC5D;AAEK;AACM;AACM;AAEA;AAAY,QAAR,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;AACjE;AAEK;AACM;AAEA;AAAY,QAAF,aAAQ,GACvB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,UAAU,CAAC,CAAC;AAC1D;AAEK;AACM;AACM;AAEA;AAAY,QAAR,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,kBAAkB,CAAC,CAAC;AAClE;AAEK;AACM;AACM;AAEA;AAAY,QAAR,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE,KAGyC;AACzC,IAnDE,IACI,OAAO,CAAC,OAAsC;AACpD,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACtC,KAAG;AACH,IACE,IACI,QAAQ,CAAC,QAAsD;AACrE,QAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClC,KAAG;AACH,IA2CE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;AACpC,YAAM,MAAM,sBAAsB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5D,YACM,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ;AACQ;AACQ,gBAAhB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACvC,oBAAU,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAChE,iBAAS,CAAC,CAAC;AACX,gBACQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACtC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B;AAEG;AACI,QAAH,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAH,KAAK;AACP,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC5B,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAP,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,IAAI,CAAC,MAAuB;AAC9B,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,MAAM,YAAY,GAAG,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,SAAS,CAAC;AACjE;AAEG;AACI;AACI;AACI,QAAX,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,YAAY,IAAI,CAAC,YAAY,EAAE;AACzE,YAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;AACxD,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AACpE,SAAK;AACL,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC;AACvF,YAAM,MAAM,eAAe,mCAChB,OAAO,KACV,QAAQ,EAAE,QAAQ,IAAI,OAAO,CAAC,QAAQ,EACtC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,GACxC,CAAC;AACR,YAAM,OAAO,eAAe,CAAC;AAC7B,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAClE,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC1C,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,wBAAwB;AAClC,QAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;AACpE,YAAM,IAAI,QAAQ,EAAE;AACpB,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC9C,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;AACtC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC5B,gBAAQ,MAAM,KAAK,CACP,mEAAmE;AAC/E,oBAAY,sFAAsF;AAClG,oBAAY,KAAK,CAAC,CAAC;AACnB,aAAO;AACP,SAAK;AACL,KAAG;AACH;yCAvMC,SAAS,SAAC,kBACT,QAAQ,EAAE,iBAAiB,kBAC3B,QAAQ,EAAE,eAAe,kBACzB,IAAI,EAAE,EAAC,OAAO,EAAE,eAAe,EAAC,eACjC;gZACI;AAAC;AAAuC,YAdrC,SAAS;AAAI,YAVnB,UAAU;AACV,YACA,MAAM;AACP;AAAG;AAGA,sBAgCD,KAAK;AACN,uBAIC,KAAK;AACN,yBAQC,MAAM;AAAK,6BAQX,MAAM;AAAK,uBAOX,MAAM;AAAK,8BAQX,MAAM;AAAK,4BAQX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AChGhB;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA,MAIa,WAAW;AAAG,IA4CzB,YAA6B,IAAe,EAAU,OAAe;AAAI,QAA5C,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAS,YAAO,GAAP,OAAO,CAAQ;AAAC,QA3C9D,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAmB,aAAQ,GAAG,IAAI,eAAe,CAA8B,EAAE,CAAC,CAAC;AACnF,QAAmB,SAAI,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;AAC1D,QACmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD;AAEK;AAE0C;AAAY,QAiBtC,aAAQ,GACvB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,OAAO,CAAC,CAAC;AAC5E;AAEK;AACM;AACM;AAEA;AAAY,QAAR,2BAAsB,GACrC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,yBAAyB,CAAC,CAAC;AACzE;AAEK;AAEA;AAAY,QAAI,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE,KAC2E;AAC3E,IA/BE,IACI,OAAO,CAAC,OAAoC;AAClD,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACtC,KAAG;AACH,IACE,IACI,GAAG,CAAC,GAAW;AACrB,QAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,KAAG;AACH,IAuBE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ;AACQ;AACQ,gBAAhB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AAChG,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACnD,gBAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,kBAAkB;AAAK,QACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE,IAAH,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE,IAAH,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AACE,IAAH,MAAM;AAAK,QACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAClC,KAAG;AACH;AAEC;AACE;AACE,IAAH,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AACrC,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC;AAC7E,YAAM,MAAM,eAAe,mCAChB,OAAO,KACV,GAAG,EAAE,GAAG,IAAI,OAAO,CAAC,GAAG,GACxB,CAAC;AACR,YAAM,OAAO,eAAe,CAAC;AAC7B,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AACpE,YAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACzB,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC1C,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,mBAAmB;AAC7B,QAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG;AAC5D,YAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;AAChC,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC1B,gBAAQ,MAAM,KAAK,CACP,gEAAgE;AAC5E,oBAAY,sFAAsF,CAAC,CAAC;AACpG,aAAO;AACP,SAAK;AACL,KAAG;AACH;uCA/JC,SAAS,SAAC,kBACT,QAAQ,EAAE,eAAe,kBACzB,QAAQ,EAAE,aAAa,eACxB;6SACI;AAAC;AAAqC,YAZnC,SAAS;AAAI,YARnB,MAAM;AACP;AAAG;AAGF,sBA8BC,KAAK;AACN,kBAIC,KAAK;AACN,uBAOC,MAAM;AAAK,qCAQX,MAAM;AAAK,4BAMX,MAAM;AAAI;;;;;;;;;;;;;;;;;oBAAE;AAAC;AC3EhB;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AACA;AACA;AACA;AACO,MAAM,sBAAsB,GAAG;AACtC,IAAE,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAC;AAC9C,CAAC,CAAC;AAEF;AACA;AACA;AACA;AACA;AACA,MAIa,SAAS;AAAG,IAmOvB,YACmB,UAAqB,EAC9B,OAAe;AAAI,QADV,eAAU,GAAV,UAAU,CAAW;AAAC,QAC/B,YAAO,GAAP,OAAO,CAAQ;AAAC,QApOlB,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D;AAEK;AAAe;AAEpB;AACM,QAsEe,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;AACnE;AAEK;AACM;AAEA;AAAY,QAAF,aAAQ,GACvB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,OAAO,CAAC,CAAC;AAC5E;AAEK;AACM;AAEA;AAAY,QAAF,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;AACnE;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,YAAO,GACtB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,MAAM,CAAC,CAAC;AAC3E;AAEK;AACM;AAEA;AAAY,QAAF,eAAU,GACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AACM;AAEA;AAAY,QAAF,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;AACnE;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;AAC9D;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;AAC9D;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,eAAU,GACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AACM;AAEA;AAAY,QAAF,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,kBAAkB,CAAC,CAAC;AAClE;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,YAAY,CAAC,CAAC;AACjF;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,eAAe,CAAC,CAAC;AAC/D;AAEK;AACM;AAEA;AAAY,QAAF,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,eAAe,CAAC,CAAC;AAC/D;AAEK;AACM;AAEA;AAAY,QAAF,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;AACjE;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAChE,KAU+B;AAC/B;AACO;AACa;AAC+D;AAClF,IAnOC,IACI,KAAK,CAAC,KAAa;AACzB,QAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,KAAG;AACH;AAAQ;AAGG;AACiE;AAAQ,IAElF,IACI,QAAQ,CAAC,QAAsD;AACrE,QAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC9B,KAAG;AACH;AAAQ;AAA6B;AAIA;AAAQ,IAE3C,IACI,KAAK,CAAC,KAAqC;AACjD,QAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,KAAG;AACH;AAAQ;AAEN;AAEmD;AAAQ,IAE3D,IACI,SAAS,CAAC,SAAkB;AAClC,QAAI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC,KAAG;AACH;AAAQ;AAGO;AACoD;AAAQ,IAEzE,IACI,OAAO,CAAC,OAAkC;AAChD,QAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,KAAG;AACH;AAAQ;AACR;AAGkD;AAAQ,IAExD,IACI,IAAI,CAAC,IAAoD;AAC/D,QAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,KAAG;AACH;AAAQ;AAAsC;AAIL;AAAQ,IAE/C,IACI,OAAO,CAAC,KAAc;AAC5B,QAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1B,KAAG;AACH,IAgKE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;AACpC;AACM;AACM;AACM,YAAZ,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACrC,gBAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACrE,aAAO,CAAC,CAAC;AACT,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,CAAC;AACrD,YAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChD,SAAK;AACL,KAAG;AACH,IACE,WAAW,CAAC,OAAsB;AACpC,QAAI,MAAM,EAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC;AAClF,QACI,IAAI,MAAM,EAAE;AAChB,YAAM,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9B,gBAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAClD,aAAO;AACP,YACM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,KAAK,SAAS,EAAE;AACpD,gBAAQ,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChC,aAAO;AACP,YACM,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,SAAS,EAAE;AAC5C,gBAAQ,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACtC,aAAO;AACP,YACM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,KAAK,SAAS,EAAE;AACpD,gBAAQ,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChC,aAAO;AACP,YACM,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,UAAU,KAAK,SAAS,EAAE;AAC5D,gBAAQ,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AACxC,aAAO;AACP,YACM,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,EAAE;AACpC,gBAAQ,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9B,aAAO;AACP,YACM,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,QAAQ,KAAK,SAAS,EAAE;AACxD,gBAAQ,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACpC,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC;AAC9C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,OAAO;AAAK,QACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,QAAQ;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC;AAC7C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,QAAQ;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,QAAQ;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;AAC1C,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;AACpC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC;AAC3C,KAAG;AACH;AAEC,IAAC,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AAEC,IAAS,eAAe;AAAK;AAAoB,QAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,sBAAsB,CAAC;AAC5D,QAAI,uCACK,OAAO,KACV,KAAK,EAAE,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,EACnC,QAAQ,EAAE,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,EAC5C,KAAK,EAAE,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,EACnC,SAAS,EAAE,MAAA,IAAI,CAAC,UAAU,mCAAI,OAAO,CAAC,SAAS,EAC/C,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAC9B,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,IAAI,EAChC,OAAO,EAAE,MAAA,IAAI,CAAC,QAAQ,mCAAI,OAAO,CAAC,OAAO,IACzC;AACN,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;AACtC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACxB,gBAAQ,MAAM,KAAK,CACP,8DAA8D;AAC1E,oBAAY,oFAAoF,CAAC,CAAC;AAClG,aAAO;AACP,SAAK;AACL,KAAG;AACH;qCAjbC,SAAS,SAAC,kBACT,QAAQ,EAAE,YAAY,kBACtB,QAAQ,EAAE,WAAW,eACtB;q8BACI;AAAC;AAAmC,YArBjC,SAAS;AAAI,YAPnB,MAAM;AACP;AAAG;AAEG,oBAgCJ,KAAK;AACN,uBASC,KAAK;AACN,oBASC,KAAK;AACN,wBASC,KAAK;AACN,sBASC,KAAK;AACN,mBASC,KAAK;AACN,sBASC,KAAK;AACN,+BASC,MAAM;AAAK,uBAOX,MAAM;AAAK,+BAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,0BAOX,MAAM;AAAK,sBAOX,MAAM;AAAK,yBAOX,MAAM;AAAK,+BAOX,MAAM;AAAK,2BAOX,MAAM;AAAK,0BAOX,MAAM;AAAK,0BAOX,MAAM;AAAK,2BAOX,MAAM;AAAK,0BAOX,MAAM;AAAK,2BAOX,MAAM;AAAK,yBAOX,MAAM;AAAK,8BAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,2BAOX,MAAM;AAAK,2BAOX,MAAM;AAAK,6BAOX,MAAM;AAAK,4BAOX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;ACrQhB;AACA;AACA;AACA;AACA;AACA;AACA;AA4BA;AACA,MAAM,yBAAyB,GAA2B,EAAE,CAAC;AAE7D;AACA;AACA;AACA;AACA;AACA,MAOa,kBAAkB;AAAG,IAiJhC,YAA6B,UAAqB,EAAmB,OAAe;AACtF,QAD+B,eAAU,GAAV,UAAU,CAAW;AAAC,QAAkB,YAAO,GAAP,OAAO,CAAQ;AAAC,QAhJpE,oBAAe,GAAG,IAAI,GAAG,EAAsB,CAAC;AACnE,QAAmB,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrE,QAAmB,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AAClD,QAKE,gBAAW,GAAgB,MAAM,EAAE,CAAA;AACrC;AAEA;AAAe;AACc;AAIrB;AAAY,QAuGC,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;AACjE;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,eAAe,CAAC,CAAC;AAC/D;AAEK,QACM,iBAAY,GAAwB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAU,OAAO,CAAC,CAAC;AACnG,QAaI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;AACrD,KAAG;AACH,IAzIE,IACI,aAAa,CAAC,aAAsB;AAC1C,QAAI,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACxC,KAAG;AACH,IAIE,IACI,WAAW,CAAC,WAAmB;AACrC,QAAI,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AACpC,KAAG;AACH,IAEE,IACI,UAAU,CAAC,UAAsB;AACvC,QAAI,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,KAAG;AACH,IAEE,IACI,YAAY,CAAC,YAAoB;AACvC,QAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AACtC,KAAG;AACH,IAEE,IACI,iBAAiB,CAAC,iBAA0B;AAClD,QAAI,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AAChD,KAAG;AACH,IAEE,IACI,QAAQ,CAAC,QAAgB;AAC/B,QAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC9B,KAAG;AACH,IAEE,IACI,YAAY,CAAC,YAAqB;AACxC,QAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AACtC,KAAG;AACH,IAEE,IACI,cAAc,CAAC,cAAsB;AAC3C,QAAI,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AAC1C,KAAG;AACH,IAEE,IACI,SAAS,CAAC,SAAiB;AACjC,QAAI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC,KAAG;AACH,IAEE,IACI,UAAU,CAAC,UAAoB;AACrC,QAAI,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,KAAG;AACH,IAEE,IACI,OAAO,CAAC,OAAe;AAC7B,QAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,KAAG;AACH,IAEE,IACI,kBAAkB,CAAC,kBAA0B;AACnD,QAAI,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;AAClD,KAAG;AACH,IAEE,IACI,MAAM,CAAC,MAA0B;AACvC,QAAI,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC1B,KAAG;AACH,IAEE,IACI,KAAK,CAAC,KAAa;AACzB,QAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,KAAG;AACH,IAEE,IACI,MAAM,CAAC,MAAc;AAC3B,QAAI,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC1B,KAAG;AACH,IAEE,IACI,WAAW,CAAC,WAAoB;AACtC,QAAI,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AACpC,KAAG;AACH,IAEE,IACI,OAAO,CAAC,OAA+B;AAC7C,QAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,KAAG;AACH,IAoCE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAM,MAAM,eAAe,GACnB,MAA4E,CAAC;AACrF,YACM,IAAI,CAAC,eAAe,CAAC,eAAe,KAAK,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,EAAE;AAC/F,gBAAQ,MAAM,KAAK,CACP,sEAAsE;AAClF,oBAAY,kDAAkD;AAC9D,oBAAY,sDAAsD,CAAC,CAAC;AACpE,aAAO;AACP;AAEK;AACM;AACM,YAAX,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACrC,gBAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,SAAU,EAAE,EAAE,EACrE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACpC,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACzD,SAAK;AACL,KAAG;AACH,IACE,kBAAkB;AACpB,QAAI,IAAI,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACpC,SAAK;AACL,KAAG;AACH,IACE,WAAW,CAAC,OAAsB;AACpC,QAAI,MAAM,EACJ,eAAe,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,EAC3F,aAAa,EAAE,kBAAkB,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,UAAU,EACxF,WAAW,EAAE,QAAQ,EAAE,mBAAmB,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAC1E,GAAG,IAAI,CAAC;AACb,QACI,IAAI,SAAS,EAAE;AACnB,YAAM,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9B,gBAAQ,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACrD,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,aAAa,CAAC,EAAE;AAClC,gBAAQ,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;AAC5C,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,cAAc,KAAK,SAAS,EAAE;AACpE,gBAAQ,SAAS,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AACnD,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,YAAY,KAAK,SAAS,EAAE;AAChE,gBAAQ,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAC/C,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE;AAClD,gBAAQ,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC7C,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,aAAa,KAAK,SAAS,EAAE;AAClE,gBAAQ,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;AACjD,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,mBAAmB,CAAC,IAAI,kBAAkB,KAAK,SAAS,EAAE;AAC5E,gBAAQ,SAAS,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;AAC3D,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,SAAS,KAAK,SAAS,EAAE;AAC1D,gBAAQ,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACzC,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,aAAa,KAAK,SAAS,EAAE;AAClE,gBAAQ,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;AACjD,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,gBAAgB,CAAC,IAAI,eAAe,KAAK,SAAS,EAAE;AACtE,gBAAQ,SAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AACrD,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,UAAU,KAAK,SAAS,EAAE;AAC5D,gBAAQ,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AAC3C,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,WAAW,EAAE;AAChD,gBAAQ,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC7C,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,QAAQ,KAAK,SAAS,EAAE;AACxD,gBAAQ,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACvC,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,oBAAoB,CAAC,IAAI,mBAAmB,KAAK,SAAS,EAAE;AAC9E,gBAAQ,SAAS,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC;AAC7D,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,EAAE;AACxC,gBAAQ,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACrC,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,KAAK,SAAS,EAAE;AACpD,gBAAQ,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,KAAK,SAAS,EAAE;AACtD,gBAAQ,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACrC,aAAO;AACP,YAAM,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,YAAY,KAAK,SAAS,EAAE;AAChE,gBAAQ,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAC/C,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,IAAI,CAAC,eAAe,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxC,SAAK;AACL,KAAG;AACH,IACE,eAAe,CAAC,OAAmC;AACrD,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAClD,KAAG;AACH,IACE,gBAAgB;AAAK,QACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;AACnD,KAAG;AACH,IACE,cAAc;AAAK,QACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;AACjD,KAAG;AACH,IACE,aAAa;AAAK,QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;AAChD,KAAG;AACH,IACE,eAAe;AAAK,QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;AAClD,KAAG;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;AAC9C,KAAG;AACH,IACE,oBAAoB;AAAK,QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;AACvD,KAAG;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;AAC9C,KAAG;AACH,IACE,eAAe;AAAK,QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;AAClD,KAAG;AACH,IACE,iBAAiB;AAAK,QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;AACpD,KAAG;AACH,IACE,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;AAC/C,KAAG;AACH,IACE,aAAa;AAAK,QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;AAChD,KAAG;AACH,IACE,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;AAC7C,KAAG;AACH,IACE,qBAAqB;AAAK,QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC;AACxD,KAAG;AACH,IACE,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;AAC5C,KAAG;AACH,IACE,QAAQ;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;AAC3C,KAAG;AACH,IACE,gBAAgB;AAAK,QACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;AACnD,KAAG;AACH,IACE,eAAe;AAAK,QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;AAClD,KAAG;AACH,IACE,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;AAC5C,KAAG;AACH,IACE,cAAc;AAAK,QACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;AACjD,KAAG;AACH,IACU,eAAe;AAAK;AAC8B,QAAxD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,yBAAyB,CAAC;AAC/D,QAAI,uCACK,OAAO,KACV,WAAW,EAAE,MAAA,IAAI,CAAC,WAAW,mCAAI,OAAO,CAAC,WAAW,EACpD,aAAa,EAAE,MAAA,IAAI,CAAC,cAAc,mCAAI,OAAO,CAAC,aAAa,EAC3D,SAAS,EAAE,MAAA,IAAI,CAAC,SAAS,mCAAI,OAAO,CAAC,SAAS,EAC9C,WAAW,EAAE,MAAA,IAAI,CAAC,YAAY,mCAAI,OAAO,CAAC,WAAW,EACrD,UAAU,EAAE,MAAA,IAAI,CAAC,WAAW,mCAAI,OAAO,CAAC,UAAU,EAClD,YAAY,EAAE,MAAA,IAAI,CAAC,aAAa,mCAAI,OAAO,CAAC,YAAY,EACxD,iBAAiB,EAAE,MAAA,IAAI,CAAC,kBAAkB,mCAAI,OAAO,CAAC,iBAAiB,EACvE,QAAQ,EAAE,MAAA,IAAI,CAAC,SAAS,mCAAI,OAAO,CAAC,QAAQ,EAC5C,YAAY,EAAE,MAAA,IAAI,CAAC,aAAa,mCAAI,OAAO,CAAC,YAAY,EACxD,cAAc,EAAE,MAAA,IAAI,CAAC,eAAe,mCAAI,OAAO,CAAC,cAAc,EAC9D,SAAS,EAAE,MAAA,IAAI,CAAC,UAAU,mCAAI,OAAO,CAAC,SAAS,EAC/C,UAAU,EAAE,MAAA,IAAI,CAAC,WAAW,mCAAI,OAAO,CAAC,UAAU,EAClD,OAAO,EAAE,MAAA,IAAI,CAAC,QAAQ,mCAAI,OAAO,CAAC,OAAO,EACzC,kBAAkB,EAAE,MAAA,IAAI,CAAC,mBAAmB,mCAAI,OAAO,CAAC,kBAAkB,EAC1E,MAAM,EAAE,MAAA,IAAI,CAAC,OAAO,mCAAI,OAAO,CAAC,MAAM,EACtC,KAAK,EAAE,MAAA,IAAI,CAAC,MAAM,mCAAI,OAAO,CAAC,KAAK,EACnC,MAAM,EAAE,MAAA,IAAI,CAAC,OAAO,mCAAI,OAAO,CAAC,MAAM,EACtC,WAAW,EAAE,MAAA,IAAI,CAAC,YAAY,mCAAI,OAAO,CAAC,WAAW,IACrD;AACN,KAAG;AACH,IACU,sBAAsB;AAChC,QAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,MAAM,cAAc,GAAyB,EAAE,CAAC;AACpD,QAAI,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE;AAC5E,YAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACvC,YAAM,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,SAAK;AACL,QAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AACpD,QACI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAC5D,CAAC,gBAA6B;AACpC,YAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,YAAQ,MAAM,UAAU,GAAG,IAAI,GAAG,CAAqB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACnG,YAAQ,MAAM,YAAY,GAAyB,EAAE,CAAC;AACtD,YAAQ,MAAM,eAAe,GAAyB,EAAE,CAAC;AACzD,YAAQ,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACrD,gBAAU,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACjD,oBAAY,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7C,oBAAY,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,iBAAW;AACX,aAAS;AACT,YAAQ,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;AAC/D,gBAAU,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACvC,oBAAY,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAW;AACX,aAAS;AACT,YAAQ,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC5D,YAAQ,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;AAClE,YAAQ,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;AACvC,YAAQ,KAAK,MAAM,MAAM,IAAI,eAAe,EAAE;AAC9C,gBAAU,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9C,aAAS;AACT,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,mBAAmB,CAAC,OAAoB;AAAI,QAClD,OAAO,OAAO,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC;AACtE,aAAS,GAAG,CAAC,eAAe,IAAI,eAAe,CAAC,MAAO,CAAC,CAAC;AACzD,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;AACtC,gBAAQ,MAAM,KAAK,CACT,4EAA4E;AACtF,oBAAU,oEAAoE,CAAC,CAAC;AAChF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACjC,gBAAQ,MAAM,KAAK,CACT,yEAAyE;AACnF,oBAAU,gFAAgF,CAAC,CAAC;AAC5F,aAAO;AACP,SAAK;AACL,KAAG;AACH;8CAxbC,SAAS,SAAC,kBACT,QAAQ,EAAE,sBAAsB,kBAChC,QAAQ,EAAE,oBAAoB,kBAC9B;SAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,QAAQ,EAAE,2BAA2B,kBACrC,aAAa,EAAE,iBAAiB,CAAC,IAAI,cACtC;;;;;;;;iDACI;AAAC;AAA4C,YAnB1C,SAAS;AAAI,YAZnB,MAAM;AACP;AAAG;AAGE,0BAmCH,KAAK;AACN,4BAEC,KAAK;AACN,wBAKC,KAAK;AAAK,0BAEV,KAAK;AACN,yBAKC,KAAK;AACN,2BAKC,KAAK;AACN,gCAKC,KAAK;AACN,uBAKC,KAAK;AACN,2BAKC,KAAK;AACN,6BAKC,KAAK;AACN,wBAKC,KAAK;AACN,yBAKC,KAAK;AACN,sBAKC,KAAK;AACN,iCAKC,KAAK;AACN,qBAKC,KAAK;AACN,oBAKC,KAAK;AACN,qBAKC,KAAK;AACN,0BAKC,KAAK;AACN,sBAKC,KAAK;AACN,8BAUC,MAAM;AAAK,4BAOX,MAAM;AAAK,2BAIX,MAAM;AACP,uBAEC,eAAe,SAAC,SAAS,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;ACvL1D;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA,MAIa,UAAU;AAAG,IA+FxB,YAA6B,IAAe,EAAmB,OAAe;AAAI,QAArD,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAkB,YAAO,GAAP,OAAO,CAAQ;AAAC,QA9FvE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAmB,aAAQ,GAAG,IAAI,eAAe,CAA6B,EAAE,CAAC,CAAC;AAClF,QAAmB,WAAM,GACnB,IAAI,eAAe,CAEwC,SAAS,CAAC,CAAC;AAC5E,QACmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD;AAEK;AAE8C;AAAY,QAmB1C,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,OAAO,CAAC,CAAC;AAC7E;AAEK;AAEA;AAAY,QAAI,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;AAChF;AAEK;AAEA;AAAY,QAAI,gBAAW,GAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,MAAM,CAAC,CAAC;AAC3E;AAEK;AAEA;AAAY,QAAI,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AAEA;AAAY,QAAI,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AAEA;AAAY,QAAI,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;AACjF;AAEK;AAEA;AAAY,QAAI,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;AACjF;AAEK;AAEA;AAAY,QAAI,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;AAChF;AAEK;AAEA;AAAY,QAAI,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;AACjF;AAEK;AAEA;AAAY,QAAI,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,SAAS,CAAC,CAAC;AAC/E;AAEK;AAEA;AAAY,QAAI,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,YAAY,CAAC,CAAC;AAClF,KACoF;AACpF,IA/EE,IACI,OAAO,CAAC,OAAmC;AACjD,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACtC,KAAG;AACH,IACE,IACI,KAAK,CAAC,KAE2B;AACvC,QAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,KAAG;AACH,IAqEE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ;AACQ;AACQ,gBAAhB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACvC,oBAAU,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC1D,iBAAS,CAAC,CAAC;AACX,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AAClD,gBAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAClC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE,IAAH,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE,IAAH,OAAO;AAAK,QACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AAClC,KAAG;AACH;AAEC;AACE;AACE,IAAH,QAAQ;AAAK,QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE,IAAH,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;AACrC,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC;AACjF,YAAM,MAAM,eAAe,mCAChB,OAAO,KACV,KAAK,EAAE,KAAK,IAAI,OAAO,CAAC,KAAK,GAC9B,CAAC;AACR,YAAM,OAAO,eAAe,CAAC;AAC7B,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AACpE,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACvC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,oBAAoB;AAC9B,QAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK;AAChE,YAAM,IAAI,KAAK,EAAE;AACjB,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACrC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACzB,gBAAQ,MAAM,KAAK,CACP,+DAA+D;AAC3E,oBAAY,qFAAqF,CAAC,CAAC;AACnG,aAAO;AACP,SAAK;AACL,KAAG;AACH;sCAlNC,SAAS,SAAC,kBACT,QAAQ,EAAE,aAAa,kBACvB,QAAQ,EAAE,YAAY,eACvB;0kBACI;AAAC;AAAoC,YAZlC,SAAS;AAAI,YALnB,MAAM;AACP;AAAG;AACM,sBAgCP,KAAK;AACN,oBAIC,KAAK;AACN,2BASC,MAAM;AAAK,8BAMX,MAAM;AAAK,0BAMX,MAAM;AAAK,6BAMX,MAAM;AAAK,+BAMX,MAAM;AAAK,+BAMX,MAAM;AAAK,+BAMX,MAAM;AAAK,8BAMX,MAAM;AAAK,+BAMX,MAAM;AAAK,6BAMX,MAAM;AAAK,gCAMX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AC9HhB;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA,MAIa,WAAW;AAAG,IA6FzB,YACmB,IAAe,EACxB,OAAe;AAAI,QADV,SAAI,GAAJ,IAAI,CAAW;AAAC,QACzB,YAAO,GAAP,OAAO,CAAQ;AAAC,QA9FlB,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAmB,aAAQ,GAAG,IAAI,eAAe,CAA8B,EAAE,CAAC,CAAC;AACnF,QAAmB,UAAK,GAClB,IAAI,eAAe,CACwC,SAAS,CAAC,CAAC;AAC5E,QACmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD;AAEK;AAE8C;AAAY,QAkB1C,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,OAAO,CAAC,CAAC;AAC7E;AAEK;AAEA;AAAY,QAAI,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;AAChF;AAEK;AAEA;AAAY,QAAI,iBAAY,GAC3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,MAAM,CAAC,CAAC;AAC3E;AAEK;AAEA;AAAY,QAAI,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AAEA;AAAY,QAAI,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AAEA;AAAY,QAAI,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;AACjF;AAEK;AAEA;AAAY,QAAI,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;AACjF;AAEK;AAEA;AAAY,QAAI,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;AAChF;AAEK;AAEA;AAAY,QAAI,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;AACjF;AAEK;AAEA;AAAY,QAAI,oBAAe,GAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,SAAS,CAAC,CAAC;AAC/E;AAEK;AAEA;AAAY,QAAI,uBAAkB,GACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,YAAY,CAAC,CAAC;AAClF,KAG+B;AAC/B,IAhFE,IACI,OAAO,CAAC,OAAoC;AAClD,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACtC,KAAG;AACH,IACE,IACI,IAAI,CAAC,IAC2B;AACtC,QAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAG;AACH,IAuEE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ;AACQ;AACQ,gBAAhB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AAChG,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACnD,gBAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAClC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACE,IAAH,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE,IAAH,OAAO;AAAK,QACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AACE,IAAH,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;AACtC,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC;AAC/E,YAAM,MAAM,eAAe,mCAChB,OAAO,KACV,IAAI,EAAE,IAAI,IAAI,OAAO,CAAC,IAAI,GAC3B,CAAC;AACR,YAAM,OAAO,eAAe,CAAC;AAC7B,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AACpE,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACxC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,oBAAoB;AAC9B,QAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI;AAC9D,YAAM,IAAI,IAAI,EAAE;AAChB,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACpC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC1B,gBAAQ,MAAM,KAAK,CACP,gEAAgE;AAC5E,oBAAY,sFAAsF,CAAC,CAAC;AACpG,aAAO;AACP,SAAK;AACL,KAAG;AACH;uCAxMC,SAAS,SAAC,kBACT,QAAQ,EAAE,cAAc,kBACxB,QAAQ,EAAE,aAAa,eACxB;kmBACI;AAAC;AAAqC,YAZnC,SAAS;AAAI,YALnB,MAAM;AACP;AAAG;AACO,sBA+BR,KAAK;AACN,mBAIC,KAAK;AACN,4BAQC,MAAM;AAAK,+BAMX,MAAM;AAAK,2BAMX,MAAM;AAAK,8BAMX,MAAM;AAAK,gCAMX,MAAM;AAAK,gCAMX,MAAM;AAAK,gCAMX,MAAM;AAAK,+BAMX,MAAM;AAAK,gCAMX,MAAM;AAAK,8BAMX,MAAM;AAAK,iCAMX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AC5HhB;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA,MAIa,YAAY;AAAG,IA6G1B,YAA6B,IAAe,EAAmB,OAAe;AAAI,QAArD,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAkB,YAAO,GAAP,OAAO,CAAQ;AAAC,QA5GvE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAmB,aAAQ,GAAG,IAAI,eAAe,CAA+B,EAAE,CAAC,CAAC;AACpF,QAAmB,YAAO,GACpB,IAAI,eAAe,CACf,SAAS,CAAC,CAAC;AACrB,QACmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD;AAEK;AAAe;AAEkD,YAiB7C,kBAAa,GAClC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;AAC9D;AAEK;AACM;AAEA;AAAY,QAAF,mBAAc,GAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,OAAO,CAAC,CAAC;AAC5E;AAEK;AACM;AAEA;AAAY,QAAF,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,kBAAa,GAC5B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,MAAM,CAAC,CAAC;AAC3E;AAEK;AACM;AAEA;AAAY,QAAF,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AACM;AAEA;AAAY,QAAF,uBAAkB,GACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,uBAAkB,GACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,uBAAkB,GACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,sBAAiB,GAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,UAAU,CAAC,CAAC;AAC/E;AAEK;AACM;AAEA;AAAY,QAAF,uBAAkB,GACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,WAAW,CAAC,CAAC;AAChF;AAEK;AACM;AAEA;AAAY,QAAF,qBAAgB,GAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,SAAS,CAAC,CAAC;AAC9E;AAEK;AACM;AAEA;AAAY,QAAF,wBAAmB,GAClC,IAAI,CAAC,aAAa,CAAC,cAAc,CAA4B,YAAY,CAAC,CAAC;AACjF,KACoF;AACpF,IA9FE,IACI,OAAO,CAAC,OAAqC;AACnD,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACtC,KAAG;AACH,IACE,IACI,MAAM,CAAC,MAAgE;AAC7E,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAG;AACH,IAsFE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ;AACQ;AACQ,gBAAhB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACvC,oBAAU,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9D,iBAAS,CAAC,CAAC;AACX,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACpD,gBAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACrC,YAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACpC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACjC,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,SAAS;AAAK,QACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,YAAY;AAAK,QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;AACzC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,WAAW;AAAK,QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,UAAU;AAAK,QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;AACvC,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC;AACnF,YAAM,MAAM,eAAe,mCAChB,OAAO,KACV,MAAM,EAAE,MAAM,IAAI,OAAO,CAAC,MAAM,GACjC,CAAC;AACR,YAAM,OAAO,eAAe,CAAC;AAC7B,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH,IACU,uBAAuB;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AACpE,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACzC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,sBAAsB;AAChC,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;AAClE,YAAM,IAAI,MAAM,EAAE;AAClB,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACzC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC3B,gBAAQ,MAAM,KAAK,CACP,8EAA8E;AAC1F,oBAAY,0EAA0E,CAAC,CAAC;AACxF,aAAO;AACP,SAAK;AACL,KAAG;AACH;wCA3NC,SAAS,SAAC,kBACT,QAAQ,EAAE,eAAe,kBACzB,QAAQ,EAAE,cAAc,eACzB;gqBACI;AAAC;AAAsC,YAZpC,SAAS;AAAI,YAJgC,MAAM;AAAG;AAAG;AACnD,sBA+BX,KAAK;AACN,qBAIC,KAAK;AACN,4BAOK,MAAM;AAAK,6BAOf,MAAM;AAAK,gCAOX,MAAM;AAAK,4BAOX,MAAM;AAAK,+BAOX,MAAM;AAAK,iCAOX,MAAM;AAAK,iCAOX,MAAM;AAAK,iCAOX,MAAM;AAAK,gCAOX,MAAM;AAAK,iCAOX,MAAM;AAAK,+BAOX,MAAM;AAAK,kCAOX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;ACrIhB;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA,MAIa,eAAe;AAAG,IAmB7B,YAA6B,IAAe,EAAmB,OAAe;AAAI,QAArD,SAAI,GAAJ,IAAI,CAAW;AAAC,QAAkB,YAAO,GAAP,OAAO,CAAQ;AAAC,QAlB9D,iBAAY,GAAG,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;AACrE,QAAmB,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD,KAgBoF;AACpF;AACO;AAEoC;AAAQ,IATjD,IACI,WAAW,CAAC,WAAoB;AACtC,QAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxC,KAAG;AACH,IAGE,QAAQ;AACV,QAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC5D;AACQ,gBAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACvC,oBAAU,IAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACpE,iBAAS,CAAC,CAAC;AACX,gBAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,gBAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACvD,aAAO,CAAC,CAAC;AACT,YACM,IAAI,CAAC,2BAA2B,EAAE,CAAC;AACzC,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/B,QAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,YAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACrC,SAAK;AACL,KAAG;AACH,IACU,eAAe;AAAK,QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW;AACjD,YAAM,MAAM,eAAe,GAAoC,EAAC,WAAW,EAAC,CAAC;AAC7E,YAAM,OAAO,eAAe,CAAC;AAC7B,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH,IACU,2BAA2B;AACrC,QAAI,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;AAC7E,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC5C,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,kBAAkB;AAAK,QAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC9B,YAAM,MAAM,KAAK,CACP,4EAA4E;AACtF,gBAAU,oEAAoE,CAAC,CAAC;AAChF,SAAK;AACL,QAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC5B,YAAM,MAAM,KAAK,CACP,kFAAkF;AAC5F,gBAAU,8EAA8E,CAAC,CAAC;AAC1F,SAAK;AACL,KAAG;AACH;2CA1EC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB,kBAC7B,QAAQ,EAAE,iBAAiB,eAC5B;oMACI;AAAC;AAAyC,YAXvC,SAAS;AAAI,YAJK,MAAM;AAAG;AAAG;AAAmC,0BA6BtE,KAAK;AACP;;;;;;;;;oBAAE;AAAC;ACzCJ;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA,MAIa,eAAgB,SAAQ,YAAY;AACjD,IAOqB,iBAAiB;AACtC,QAAI,IAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AACvD,KAAG;AACH,IACqB,OAAO;AAC5B,QAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACnC,QAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AACnD,KAAG;AACH,IACqB,SAAS;AAC9B,QAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,YAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACrC,SAAK;AACL,KAAG;AACH,IACU,uBAAuB;AAAK,QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC5B,YAAM,MAAM,KAAK,CACP,kFAAkF;AAC5F,gBAAU,8EAA8E,CAAC,CAAC;AAC1F,SAAK;AACL,KAAG;AACH;2CAlCC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB,kBAC7B,QAAQ,EAAE,iBAAiB,eAC5B;;;;;;;;0BACI;AAAC;ACxBN;AACA;AACA;AACA;AACA;AACA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA,MAIa,eAAe;AAAG,IA4B7B,YACmB,UAAqB,EAC9B,OAAe;AAAI,QADV,eAAU,GAAV,UAAU,CAAW;AAAC,QAC/B,YAAO,GAAP,OAAO,CAAQ;AAAC,KAAG;AAC/B;AACO;AACmB;AAC0D;AAAQ,IA7B1F,IACI,IAAI,CAAC,IAAiB;AAC5B,QAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,KAAG;AACH;AAAQ;AAGc;AACsD;AAAQ,IAElF,IACI,OAAO,CAAC,OAA+D;AAC7E,QAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,KAAG;AACH,IAaE,QAAQ;AACV;AAAoB,QAAhB,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;AACpC,YAAM,IAAI,EAAC,MAAA,MAAA,MAAM,CAAC,MAAM,0CAAE,IAAI,0CAAE,aAAa,CAAA,KAAK,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,EAAE;AAClG,gBAAQ,MAAM,KAAK,CACP,6EAA6E;AACzF,oBAAY,kFAAkF;AAC9F,oBAAY,2EAA2E,CAAC,CAAC;AACzF,aAAO;AACP;AAEK;AACM;AACM,YAAX,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;AACrC,gBAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAC1F,aAAO,CAAC,CAAC;AACT,YAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,CAAC;AACtD,SAAK;AACL,KAAG;AACH,IACE,WAAW,CAAC,OAAsB;AACpC,QAAI,MAAM,EAAC,KAAK,EAAE,OAAO,EAAC,GAAG,IAAI,CAAC;AAClC,QACI,IAAI,OAAO,EAAE;AACjB,YAAM,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9B,gBAAQ,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACnD,aAAO;AACP,YACM,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,SAAS,EAAE;AAClD,gBAAQ,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACpD,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE,IAAL,OAAO;AAAK,QACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AAClC,KAAG;AACH;AAEC,IAAS,eAAe;AAAK,QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;AACxC,QAAI,uCACK,OAAO,KACV,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,EAC3D,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,IAC9B;AACN,KAAG;AACH;AAEC;AACE;AACE;AACE;AACE;AACE;AAEJ;AAAQ,IAAL,cAAc,CAAC,IAAiB;AAC1C,QAAI,MAAM,MAAM,GAAsE,EAAE,CAAC;AACzF,QACI,IAAI,CAAC,OAAO,CAAC,IAAI;AACrB,YAAM,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AAC7F,SAAK,CAAC,CAAC;AACP,QACI,OAAO,MAAM,CAAC;AAClB,KAAG;AACH;AAEC,IAAS,kBAAkB;AAAK,QAC7B,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACvD,YAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;AACtC,gBAAQ,MAAM,KAAK,CACP,4EAA4E;AACxF,oBAAY,oEAAoE,CAAC,CAAC;AAClF,aAAO;AACP,YAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACzB,gBAAQ,MAAM,KAAK,CACP,oEAAoE;AAChF,oBAAY,qFAAqF,CAAC,CAAC;AACnG,aAAO;AACP,SAAK;AACL,KAAG;AACH;2CAhIC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB,kBAC7B,QAAQ,EAAE,iBAAiB,eAC5B;mPACI;AAAC;AAAyC,YAlBvC,SAAS;AAAI,YANnB,MAAM;AACP;AAAG;AAES,mBA0BV,KAAK;AACN,sBASC,KAAK;AACP;;;;;;;;;;;oBAAE;AA8GH;AACA,SAAS,eAAe,CAAC,KAAU;AAAI,IACrC,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,GAAG,KAAK,QAAQ,CAAC;AACjF;AACA;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA,MAAM,UAAU,GAAG;AACnB,IAAE,SAAS;AACX,IAAE,YAAY;AACd,IAAE,iBAAiB;AACnB,IAAE,SAAS;AACX,IAAE,qBAAqB;AACvB,IAAE,gBAAgB;AAClB,IAAE,aAAa;AACf,IAAE,WAAW;AACb,IAAE,SAAS;AACX,IAAE,kBAAkB;AACpB,IAAE,UAAU;AACZ,IAAE,WAAW;AACb,IAAE,YAAY;AACd,IAAE,eAAe;AACjB,IAAE,eAAe;AACjB,IAAE,eAAe;AACjB,CAAC,CAAC;AACF,MAKa,gBAAgB;AAC7B;4CALC,QAAQ,SAAC,kBACR,YAAY,EAAE,UAAU;iBACxB,OAAO,EAAE,UAAU,eACpB;;;;;;;;;6nBACI;AAAC;AClDN;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA,MACa,oBAAoB;AACjC,IAEE,YAA6B,OAAe;AAAI,QAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC,KAAG;AAClD;AAEC;AACE;AACE;AAEJ;AAAQ,IAAP,KAAK,CAAC,OAAsC;AAAI,QAC9C,OAAO,IAAI,UAAU,CAAC,QAAQ;AAClC;AACM;AACM,YAAN,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;AACpC,gBAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACtE,aAAO;AACP,YACM,MAAM,QAAQ,GACV,CACE,MAA8C,EAC9C,MAAoC;AAC1C,gBACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AACzB,oBAAU,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;AAC1C,oBAAU,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC9B,iBAAS,CAAC,CAAC;AACX,aAAO,CAAC;AACR,YAAM,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACvD,SAAK,CAAC,CAAC;AACP,KAAG;AACH;iJAAC;AACD,uNAhCK;AAAC;EADL,UAAU,ZAEK,YAhBI,MAAM;AAcd,EAAC,FAdgB;SAcN,EAAE,MAAM,EAAC;;;uEAdD;AAAC;ACXhC;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA,MACa,WAAW;AACxB,IAEE,YAA6B,OAAe;AAAI,QAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC,KAAG;AAClD;AAEC;AACE;AACE,IAAH,OAAO,CAAC,OAAoC;AAAI,QAC9C,OAAO,IAAI,UAAU,CAAC,QAAQ;AAClC;AACM;AACM,YAAN,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC3B,gBAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpD,aAAO;AACP,YACM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM;AACtD,gBAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AACzB,oBAAU,QAAQ,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;AAC3C,oBAAU,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC9B,iBAAS,CAAC,CAAC;AACX,aAAO,CAAC,CAAC;AACT,SAAK,CAAC,CAAC;AACP,KAAG;AACH;sHAAC;AACD,mLAzBK;AAAC;EADL,UAAU,ZAEK,YAdI,MAAM;AAYd,EAAC,FAZgB;SAYN,EAAE,MAAM,EAAC;;;uEAZD;AAAC;ACXhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACuR","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {BehaviorSubject, Observable, Subscriber} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\ntype MapEventManagerTarget = {\n  addListener: (name: string, callback: (...args: any[]) => void) => google.maps.MapsEventListener;\n} | undefined;\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nexport class MapEventManager {\n  /** Pending listeners that were added before the target was set. */\n  private _pending: {observable: Observable<any>, observer: Subscriber<any>}[] = [];\n  private _listeners: google.maps.MapsEventListener[] = [];\n  private _targetStream = new BehaviorSubject<MapEventManagerTarget>(undefined);\n\n  /** Clears all currently-registered event listeners. */\n  private _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter<T>(name: string): Observable<T> {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable<T>(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({observable, observer});\n          return undefined;\n        }\n\n        const listener = target.addListener(name, (event: T) => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n\n      return observable;\n    }));\n  }\n\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target: MapEventManagerTarget) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._targetStream.next(target);\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  Inject,\n  PLATFORM_ID,\n  NgZone,\n  SimpleChanges,\n  EventEmitter,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {Observable} from 'rxjs';\nimport {MapEventManager} from '../map-event-manager';\n\ninterface GoogleMapsWindow extends Window {\n  gm_authFailure?: () => void;\n  google?: typeof google;\n}\n\n/** default options set to the Googleplex */\nexport const DEFAULT_OPTIONS: google.maps.MapOptions = {\n  center: {lat: 37.421995, lng: -122.084092},\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap' as unknown as google.maps.MapTypeId\n};\n\n/** Arbitrary default height for the map element */\nexport const DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nexport const DEFAULT_WIDTH = '500px';\n\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n@Component({\n  selector: 'google-map',\n  exportAs: 'googleMap',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoogleMap implements OnChanges, OnInit, OnDestroy {\n  private _eventManager: MapEventManager = new MapEventManager(this._ngZone);\n  private _mapEl: HTMLElement;\n  private _existingAuthFailureCallback: GoogleMapsWindow['gm_authFailure'];\n\n  /**\n   * The underlying google.maps.Map object\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#Map\n   */\n  googleMap?: google.maps.Map;\n\n  /** Whether we're currently rendering inside a browser. */\n  _isBrowser: boolean;\n\n  /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n  @Input() height: string | number | null = DEFAULT_HEIGHT;\n\n  /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n  @Input() width: string | number | null = DEFAULT_WIDTH;\n\n  /**\n   * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n   */\n  @Input() mapTypeId: google.maps.MapTypeId | undefined;\n\n  @Input()\n  set center(center: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._center = center;\n  }\n  private _center: google.maps.LatLngLiteral|google.maps.LatLng;\n\n  @Input()\n  set zoom(zoom: number) {\n    this._zoom = zoom;\n  }\n  private _zoom: number;\n\n  @Input()\n  set options(options: google.maps.MapOptions) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  private _options = DEFAULT_OPTIONS;\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n   */\n   @Output() readonly authFailure: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n   */\n  @Output() readonly boundsChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n   */\n  @Output() readonly centerChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent|google.maps.IconMouseEvent> =\n      this._eventManager\n          .getLazyEmitter<google.maps.MapMouseEvent|google.maps.IconMouseEvent>('click');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n   */\n  @Output() readonly mapDrag: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('drag');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n   */\n  @Output() readonly mapDragend: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('dragend');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n   */\n  @Output() readonly mapDragstart: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('dragstart');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n   */\n  @Output() readonly headingChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('heading_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n   */\n  @Output() readonly idle: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('idle');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n   */\n  @Output() readonly maptypeidChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('maptypeid_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n   */\n  @Output()\n  readonly mapMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n   */\n  @Output() readonly mapMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n   */\n  @Output() readonly mapMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n   */\n  @Output() readonly projectionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('projection_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n   */\n  @Output() readonly mapRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n   */\n  @Output() readonly tilesloaded: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('tilesloaded');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n   */\n  @Output() readonly tiltChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('tilt_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n   */\n  @Output() readonly zoomChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('zoom_changed');\n\n  constructor(\n    private readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(PLATFORM_ID) platformId: Object) {\n\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace google not found, cannot construct embedded google ' +\n            'map. Please install the Google Maps JavaScript API: ' +\n            'https://developers.google.com/maps/documentation/javascript/' +\n            'tutorial#Loading_the_Maps_API');\n      }\n\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n        this.authFailure.emit();\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n\n    const googleMap = this.googleMap;\n\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container')!;\n      this._setSize();\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n      this._eventManager.setTarget(this.googleMap);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(\n      bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x: number, y: number) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(\n      latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds|null {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons(): boolean {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading(): number {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId(): google.maps.MapTypeId|string {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection(): google.maps.Projection|null {\n    this._assertInitialized();\n    return this.googleMap.getProjection();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView(): google.maps.StreetViewPanorama {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt(): number {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom(): number {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls(): google.maps.MVCArray<Node>[] {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data(): google.maps.Data {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes(): google.maps.MapTypeRegistry {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType> {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n\n  private _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height =\n          this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n      styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n    }\n  }\n\n  /** Combines the center and zoom and the other map options into a single object */\n  private _combineOptions(): google.maps.MapOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n    };\n  }\n\n  /** Asserts that the map has been initialized. */\n  private _assertInitialized(): asserts this is {googleMap: google.maps.Map} {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                  'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n}\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, NgZone, OnDestroy, OnInit} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\n\n@Directive({\n  selector: 'map-base-layer',\n  exportAs: 'mapBaseLayer',\n})\nexport class MapBaseLayer implements OnInit, OnDestroy {\n  constructor(protected readonly _map: GoogleMap, protected readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  private _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n  protected _initializeObject() {}\n  protected _setMap() {}\n  protected _unsetMap() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n@Directive({\n  selector: 'map-bicycling-layer',\n  exportAs: 'mapBicyclingLayer',\n})\nexport class MapBicyclingLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.BicyclingLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n   */\n  bicyclingLayer?: google.maps.BicyclingLayer;\n\n  protected override _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  protected override _setMap() {\n    this._assertLayerInitialized();\n    this.bicyclingLayer.setMap(this._map.googleMap!);\n  }\n\n  protected override _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {bicyclingLayer: google.maps.BicyclingLayer} {\n    if (!this.bicyclingLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n@Directive({\n  selector: 'map-circle',\n  exportAs: 'mapCircle',\n})\nexport class MapCircle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.CircleOptions>({});\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLng|google.maps.LatLngLiteral|undefined>(undefined);\n  private readonly _radius = new BehaviorSubject<number|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * Underlying google.maps.Circle object.\n   *\n   * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n   */\n  circle?: google.maps.Circle;  // initialized in ngOnInit\n\n  @Input()\n  set options(options: google.maps.CircleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set center(center: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._center.next(center);\n  }\n\n  @Input()\n  set radius(radius: number) {\n    this._radius.next(radius);\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n   */\n  @Output() readonly centerChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n   */\n  @Output() readonly circleClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n   */\n  @Output() readonly circleDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n   */\n  @Output() readonly circleDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n   */\n  @Output() readonly circleDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n   */\n  @Output() readonly circleDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n   */\n  @Output() readonly circleMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n   */\n  @Output() readonly circleMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n   */\n  @Output() readonly circleMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n   */\n  @Output() readonly circleMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n   */\n  @Output() readonly circleMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n   */\n  @Output() readonly radiusChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('radius_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n   */\n  @Output() readonly circleRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n        this._assertInitialized();\n        this.circle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n  getRadius(): number {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.CircleOptions> {\n    return combineLatest([this._options, this._center, this._radius])\n        .pipe(map(([options, center, radius]) => {\n          const combinedOptions: google.maps.CircleOptions = {\n            ...options,\n            center: center || options.center,\n            radius: radius !== undefined ? radius : options.radius,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n\n  private _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  private _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {circle: google.maps.Circle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.circle) {\n        throw Error(\n          'Cannot interact with a Google Map Circle before it has been ' +\n          'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n@Directive({\n  selector: 'map-directions-renderer',\n  exportAs: 'mapDirectionsRenderer',\n})\nexport class MapDirectionsRenderer implements OnInit, OnChanges, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  @Input()\n  set directions(directions: google.maps.DirectionsResult) {\n    this._directions = directions;\n  }\n  private _directions: google.maps.DirectionsResult;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  @Input()\n  set options(options: google.maps.DirectionsRendererOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.DirectionsRendererOptions;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.directions_changed\n   */\n  @Output()\n  readonly directionsChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('directions_changed');\n\n  /** The underlying google.maps.DirectionsRenderer object. */\n  directionsRenderer?: google.maps.DirectionsRenderer;\n\n  constructor(private readonly _googleMap: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.directionsRenderer.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections(): google.maps.DirectionsResult {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel(): Node {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex(): number {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n\n  private _combineOptions(): google.maps.DirectionsRendererOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  private _assertInitialized():\n      asserts this is {directionsRenderer: google.maps.DirectionsRenderer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.directionsRenderer) {\n        throw Error(\n            'Cannot interact with a Google Map Directions Renderer before it has been ' +\n            'initialized. Please wait for the Directions Renderer to load before trying ' +\n            'to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n@Directive({\n  selector: 'map-ground-overlay',\n  exportAs: 'mapGroundOverlay',\n})\nexport class MapGroundOverlay implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  private readonly _opacity = new BehaviorSubject<number>(1);\n  private readonly _url = new BehaviorSubject<string>('');\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.GroundOverlay object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n   */\n  groundOverlay?: google.maps.GroundOverlay;\n\n  /** URL of the image that will be shown in the overlay. */\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /** Bounds for the overlay. */\n  @Input()\n  get bounds(): google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral {\n    return this._bounds.value!;\n  }\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /** Whether the overlay is clickable */\n  @Input() clickable: boolean = false;\n\n  /** Opacity of the overlay. */\n  @Input()\n  set opacity(opacity: number) {\n    this._opacity.next(opacity);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value,\n            });\n          });\n          this._assertInitialized();\n          this.groundOverlay.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity(): number {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n\n  private _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap!);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {groundOverlay: google.maps.GroundOverlay} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.groundOverlay) {\n        throw Error(\n            'Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n            'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n@Directive({\n  selector: 'map-info-window',\n  exportAs: 'mapInfoWindow',\n  host: {'style': 'display: none'},\n})\nexport class MapInfoWindow implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.InfoWindowOptions>({});\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * Underlying google.maps.InfoWindow\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n   */\n  infoWindow?: google.maps.InfoWindow;\n\n  @Input()\n  set options(options: google.maps.InfoWindowOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n   */\n  @Output() readonly closeclick: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('closeclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.content_changed\n   */\n  @Output() readonly contentChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('content_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n   */\n  @Output() readonly domready: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('domready');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.position_changed\n   */\n  @Output() readonly positionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.zindex_changed\n   */\n  @Output() readonly zindexChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  constructor(private readonly _googleMap: GoogleMap,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent(): string|Node {\n    this._assertInitialized();\n    return this.infoWindow.getContent();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.infoWindow.getPosition();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor?: MapAnchorPoint) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.InfoWindowOptions> {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions: google.maps.InfoWindowOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {infoWindow: google.maps.InfoWindow} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.infoWindow) {\n        throw Error(\n            'Cannot interact with a Google Map Info Window before it has been ' +\n            'initialized. Please wait for the Info Window to load before trying to interact with ' +\n            'it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n@Directive({\n  selector: 'map-kml-layer',\n  exportAs: 'mapKmlLayer',\n})\nexport class MapKmlLayer implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.KmlLayerOptions>({});\n  private readonly _url = new BehaviorSubject<string>('');\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.KmlLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n   */\n  kmlLayer?: google.maps.KmlLayer;\n\n  @Input()\n  set options(options: google.maps.KmlLayerOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n   */\n  @Output() readonly kmlClick: Observable<google.maps.KmlMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.KmlMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml\n   * #KmlLayer.defaultviewport_changed\n   */\n  @Output() readonly defaultviewportChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('defaultviewport_changed');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n   */\n  @Output() readonly statusChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('status_changed');\n\n  constructor(private readonly _map: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n        this._assertInitialized();\n        this.kmlLayer.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata(): google.maps.KmlLayerMetadata {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus(): google.maps.KmlLayerStatus {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n\n  private _combineOptions(): Observable<google.maps.KmlLayerOptions> {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions: google.maps.KmlLayerOptions = {\n        ...options,\n        url: url || options.url,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is { kmlLayer: google.maps.KmlLayer } {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.kmlLayer) {\n        throw Error(\n            'Cannot interact with a Google Map KmlLayer before it has been ' +\n            'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport const DEFAULT_MARKER_OPTIONS = {\n  position: {lat: 37.421995, lng: -122.084092},\n};\n\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n@Directive({\n  selector: 'map-marker',\n  exportAs: 'mapMarker',\n})\nexport class MapMarker implements OnInit, OnChanges, OnDestroy, MapAnchorPoint {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position = position;\n  }\n  private _position: google.maps.LatLngLiteral|google.maps.LatLng;\n\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  @Input()\n  set label(label: string|google.maps.MarkerLabel) {\n    this._label = label;\n  }\n  private _label: string|google.maps.MarkerLabel;\n\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  @Input()\n  set clickable(clickable: boolean) {\n    this._clickable = clickable;\n  }\n  private _clickable: boolean;\n\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  @Input()\n  set options(options: google.maps.MarkerOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.MarkerOptions;\n\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n  @Input()\n  set icon(icon: string | google.maps.Icon | google.maps.Symbol) {\n    this._icon = icon;\n  }\n  private _icon: string | google.maps.Icon | google.maps.Symbol;\n\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n  @Input()\n  set visible(value: boolean) {\n    this._visible = value;\n  }\n  private _visible: boolean;\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n   */\n  @Output() readonly animationChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('animation_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n   */\n  @Output() readonly clickableChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('clickable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n   */\n  @Output() readonly cursorChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('cursor_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n   */\n  @Output() readonly mapDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n   */\n  @Output() readonly mapDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n   */\n  @Output() readonly draggableChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('draggable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n   */\n  @Output() readonly mapDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n   */\n  @Output() readonly flatChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('flat_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n   */\n  @Output() readonly iconChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('icon_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n   */\n  @Output() readonly mapMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n   */\n  @Output() readonly mapMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n   */\n  @Output() readonly mapMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n   */\n  @Output() readonly mapMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n   */\n  @Output() readonly positionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n   */\n  @Output() readonly mapRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n   */\n  @Output() readonly shapeChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('shape_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n   */\n  @Output() readonly titleChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('title_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n   */\n  @Output() readonly visibleChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('visible_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n   */\n  @Output() readonly zindexChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  /**\n   * The underlying google.maps.Marker object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n   */\n  marker?: google.maps.Marker;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.marker.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {marker, _title, _position, _label, _clickable, _icon, _visible} = this;\n\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation(): google.maps.Animation|null {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable(): boolean {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor(): string|null {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon(): string|google.maps.Icon|google.maps.Symbol|null {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel(): google.maps.MarkerLabel|null {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity(): number|null {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape(): google.maps.MarkerShape|null {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle(): string|null {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex(): number|null {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor(): google.maps.MVCObject {\n    this._assertInitialized();\n    return this.marker;\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.MarkerOptions {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: this._visible ?? options.visible\n    };\n  }\n\n  private _assertInitialized(): asserts this is {marker: google.maps.Marker} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.marker) {\n        throw Error(\n            'Cannot interact with a Google Map Marker before it has been ' +\n            'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n/// <reference path=\"marker-clusterer-types.ts\" />\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapMarker} from '../map-marker/map-marker';\n\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS: MarkerClustererOptions = {};\n\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n@Component({\n  selector: 'map-marker-clusterer',\n  exportAs: 'mapMarkerClusterer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapMarkerClusterer implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n  private readonly _currentMarkers = new Set<google.maps.Marker>();\n  private readonly _eventManager = new MapEventManager(this._ngZone);\n  private readonly _destroy = new Subject<void>();\n\n  /** Whether the clusterer is allowed to be initialized. */\n  private readonly _canInitialize: boolean;\n\n  @Input()\n  ariaLabelFn: AriaLabelFn = () => ''\n\n  @Input()\n  set averageCenter(averageCenter: boolean) {\n    this._averageCenter = averageCenter;\n  }\n  private _averageCenter: boolean;\n\n  @Input() batchSize?: number;\n\n  @Input()\n  set batchSizeIE(batchSizeIE: number) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  private _batchSizeIE: number;\n\n  @Input()\n  set calculator(calculator: Calculator) {\n    this._calculator = calculator;\n  }\n  private _calculator: Calculator;\n\n  @Input()\n  set clusterClass(clusterClass: string) {\n    this._clusterClass = clusterClass;\n  }\n  private _clusterClass: string;\n\n  @Input()\n  set enableRetinaIcons(enableRetinaIcons: boolean) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  private _enableRetinaIcons: boolean;\n\n  @Input()\n  set gridSize(gridSize: number) {\n    this._gridSize = gridSize;\n  }\n  private _gridSize: number;\n\n  @Input()\n  set ignoreHidden(ignoreHidden: boolean) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  private _ignoreHidden: boolean;\n\n  @Input()\n  set imageExtension(imageExtension: string) {\n    this._imageExtension = imageExtension;\n  }\n  private _imageExtension: string;\n\n  @Input()\n  set imagePath(imagePath: string) {\n    this._imagePath = imagePath;\n  }\n  private _imagePath: string;\n\n  @Input()\n  set imageSizes(imageSizes: number[]) {\n    this._imageSizes = imageSizes;\n  }\n  private _imageSizes: number[];\n\n  @Input()\n  set maxZoom(maxZoom: number) {\n    this._maxZoom = maxZoom;\n  }\n  private _maxZoom: number;\n\n  @Input()\n  set minimumClusterSize(minimumClusterSize: number) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  private _minimumClusterSize: number;\n\n  @Input()\n  set styles(styles: ClusterIconStyle[]) {\n    this._styles = styles;\n  }\n  private _styles: ClusterIconStyle[];\n\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  @Input()\n  set zIndex(zIndex: number) {\n    this._zIndex = zIndex;\n  }\n  private _zIndex: number;\n\n  @Input()\n  set zoomOnClick(zoomOnClick: boolean) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  private _zoomOnClick: boolean;\n\n  @Input()\n  set options(options: MarkerClustererOptions) {\n    this._options = options;\n  }\n  private _options: MarkerClustererOptions;\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/\n   * _google_markerclustererplus.html#clusteringbegin\n   */\n  @Output() readonly clusteringbegin: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('clusteringbegin');\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n   */\n  @Output() readonly clusteringend: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('clusteringend');\n\n  /** Emits when a cluster has been clicked. */\n  @Output()\n  readonly clusterClick: Observable<Cluster> = this._eventManager.getLazyEmitter<Cluster>('click');\n\n  @ContentChildren(MapMarker, {descendants: true}) _markers: QueryList<MapMarker>;\n\n  /**\n   * The underlying MarkerClusterer object.\n   *\n   * See\n   * googlemaps.github.io/v3-utility-library/classes/\n   * _google_markerclustererplus.markerclusterer.html\n   */\n  markerClusterer?: MarkerClusterer;\n\n  constructor(private readonly _googleMap: GoogleMap, private readonly _ngZone: NgZone) {\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  ngOnInit() {\n    if (this._canInitialize) {\n      const clustererWindow =\n        window as unknown as typeof globalThis & {MarkerClusterer?: MarkerClusterer};\n\n      if (!clustererWindow.MarkerClusterer && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'MarkerClusterer class not found, cannot construct a marker cluster. ' +\n            'Please install the MarkerClustererPlus library: ' +\n            'https://github.com/googlemaps/js-markerclustererplus');\n      }\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap!, [],\n            this._combineOptions());\n      });\n\n      this._assertInitialized();\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {\n      markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles,\n      _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath,\n      _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick\n    } = this;\n\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n\n  fitMapToMarkers(padding: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n\n  getAverageCenter(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n\n  getBatchSizeIE(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n\n  getCalculator(): Calculator {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n\n  getClusterClass(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n\n  getClusters(): Cluster[] {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n\n  getEnableRetinaIcons(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n\n  getGridSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n\n  getIgnoreHidden(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n\n  getImageExtension(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n\n  getImagePath(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n\n  getImageSizes(): number[] {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n\n  getMaxZoom(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n\n  getMinimumClusterSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n\n  getTitle(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n\n  getTotalClusters(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n\n  getTotalMarkers(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n\n  getZoomOnClick(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n\n  private _combineOptions(): MarkerClustererOptions {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n    };\n  }\n\n  private _watchForMarkerChanges() {\n    this._assertInitialized();\n    const initialMarkers: google.maps.Marker[] = [];\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n      initialMarkers.push(marker);\n    }\n    this.markerClusterer.addMarkers(initialMarkers);\n\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(\n      (markerComponents: MapMarker[]) => {\n        this._assertInitialized();\n        const newMarkers = new Set<google.maps.Marker>(this._getInternalMarkers(markerComponents));\n        const markersToAdd: google.maps.Marker[] = [];\n        const markersToRemove: google.maps.Marker[] = [];\n        for (const marker of Array.from(newMarkers)) {\n          if (!this._currentMarkers.has(marker)) {\n            this._currentMarkers.add(marker);\n            markersToAdd.push(marker);\n          }\n        }\n        for (const marker of Array.from(this._currentMarkers)) {\n          if (!newMarkers.has(marker)) {\n            markersToRemove.push(marker);\n          }\n        }\n        this.markerClusterer.addMarkers(markersToAdd, true);\n        this.markerClusterer.removeMarkers(markersToRemove, true);\n        this.markerClusterer.repaint();\n        for (const marker of markersToRemove) {\n          this._currentMarkers.delete(marker);\n        }\n    });\n  }\n\n  private _getInternalMarkers(markers: MapMarker[]): google.maps.Marker[] {\n    return markers.filter(markerComponent => !!markerComponent.marker)\n        .map(markerComponent => markerComponent.marker!);\n  }\n\n  private _assertInitialized(): asserts this is {markerClusterer: MarkerClusterer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.markerClusterer) {\n        throw Error(\n          'Cannot interact with a MarkerClusterer before it has been initialized. ' +\n          'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n@Directive({\n  selector: 'map-polygon',\n  exportAs: 'mapPolygon',\n})\nexport class MapPolygon implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolygonOptions>({});\n  private readonly _paths =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n                          google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polygon object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n   */\n  polygon?: google.maps.Polygon;\n\n  @Input()\n  set options(options: google.maps.PolygonOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set paths(paths: google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n            google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n            google.maps.LatLngLiteral[]) {\n    this._paths.next(paths);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n   */\n  @Output() readonly polygonClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n   */\n  @Output() readonly polygonDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n   */\n  @Output() readonly polygonDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n   */\n  @Output() readonly polygonDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n   */\n  @Output() readonly polygonDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n   */\n  @Output() readonly polygonMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n   */\n  @Output() readonly polygonMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n   */\n  @Output() readonly polygonMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n   */\n  @Output() readonly polygonMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n   */\n  @Output() readonly polygonMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n   */\n  @Output() readonly polygonRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n        this._assertInitialized();\n        this.polygon.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths(): google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>> {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolygonOptions> {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions: google.maps.PolygonOptions = {\n        ...options,\n        paths: paths || options.paths,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polygon: google.maps.Polygon} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polygon) {\n        throw Error(\n            'Cannot interact with a Google Map Polygon before it has been ' +\n            'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n@Directive({\n  selector: 'map-polyline',\n  exportAs: 'mapPolyline',\n})\nexport class MapPolyline implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolylineOptions>({});\n  private readonly _path =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polyline object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n   */\n  polyline?: google.maps.Polyline;\n\n  @Input()\n  set options(options: google.maps.PolylineOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set path(path: google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n           google.maps.LatLngLiteral[]) {\n    this._path.next(path);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n   */\n  @Output() readonly polylineClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n   */\n  @Output() readonly polylineDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n   */\n  @Output() readonly polylineDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n   */\n  @Output() readonly polylineDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n   */\n  @Output() readonly polylineDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n   */\n  @Output() readonly polylineMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n   */\n  @Output() readonly polylineMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n   */\n  @Output() readonly polylineMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n   */\n  @Output() readonly polylineMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n   */\n  @Output() readonly polylineMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n   */\n  @Output() readonly polylineRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(\n    private readonly _map: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n        this._assertInitialized();\n        this.polyline.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolylineOptions> {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions: google.maps.PolylineOptions = {\n        ...options,\n        path: path || options.path,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polyline: google.maps.Polyline} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polyline) {\n        throw Error(\n            'Cannot interact with a Google Map Polyline before it has been ' +\n            'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n@Directive({\n  selector: 'map-rectangle',\n  exportAs: 'mapRectangle',\n})\nexport class MapRectangle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.RectangleOptions>({});\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Rectangle object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n   */\n  rectangle?: google.maps.Rectangle;\n\n  @Input()\n  set options(options: google.maps.RectangleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n   */ @Output() readonly boundsChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n   */\n  @Output() readonly rectangleClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n   */\n  @Output() readonly rectangleDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n   */\n  @Output() readonly rectangleDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n   */\n  @Output() readonly rectangleDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n   */\n  @Output() readonly rectangleDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n   */\n  @Output() readonly rectangleMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n   */\n  @Output() readonly rectangleMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n   */\n  @Output() readonly rectangleMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n   */\n  @Output() readonly rectangleMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n   */\n  @Output() readonly rectangleMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n   */\n  @Output() readonly rectangleRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n        this._assertInitialized();\n        this.rectangle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.RectangleOptions> {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions: google.maps.RectangleOptions = {\n        ...options,\n        bounds: bounds || options.bounds,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  private _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {rectangle: google.maps.Rectangle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.rectangle) {\n        throw Error(\n            'Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n            'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n@Directive({\n  selector: 'map-traffic-layer',\n  exportAs: 'mapTrafficLayer',\n})\nexport class MapTrafficLayer implements OnInit, OnDestroy {\n  private readonly _autoRefresh = new BehaviorSubject<boolean>(true);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.TrafficLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n   */\n  trafficLayer?: google.maps.TrafficLayer;\n\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  @Input()\n  set autoRefresh(autoRefresh: boolean) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n        this._assertInitialized();\n        this.trafficLayer.setMap(this._map.googleMap!);\n      });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.TrafficLayerOptions> {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions: google.maps.TrafficLayerOptions = {autoRefresh};\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {trafficLayer: google.maps.TrafficLayer} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.trafficLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n          'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n@Directive({\n  selector: 'map-transit-layer',\n  exportAs: 'mapTransitLayer',\n})\nexport class MapTransitLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.TransitLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n   */\n  transitLayer?: google.maps.TransitLayer;\n\n  protected override _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  protected override _setMap() {\n    this._assertLayerInitialized();\n    this.transitLayer.setMap(this._map.googleMap!);\n  }\n\n  protected override _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {transitLayer: google.maps.TransitLayer} {\n    if (!this.transitLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/** Possible data that can be shown on a heatmap layer. */\nexport type HeatmapData =\n  google.maps.MVCArray<\n    google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral> |\n  (google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral)[];\n\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n@Directive({\n  selector: 'map-heatmap-layer',\n  exportAs: 'mapHeatmapLayer',\n})\nexport class MapHeatmapLayer implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  @Input()\n  set data(data: HeatmapData) {\n    this._data = data;\n  }\n  private _data: HeatmapData;\n\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  @Input()\n  set options(options: Partial<google.maps.visualization.HeatmapLayerOptions>) {\n    this._options = options;\n  }\n  private _options: Partial<google.maps.visualization.HeatmapLayerOptions>;\n\n  /**\n   * The underlying google.maps.visualization.HeatmapLayer object.\n   *\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  heatmap?: google.maps.visualization.HeatmapLayer;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n            'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n            'https://developers.google.com/maps/documentation/javascript/visualization');\n      }\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.heatmap.setMap(this._googleMap.googleMap!);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {_data, heatmap} = this;\n\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData(): HeatmapData {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.visualization.HeatmapLayerOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  private _normalizeData(data: HeatmapData) {\n    const result: (google.maps.LatLng|google.maps.visualization.WeightedLocation)[] = [];\n\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n\n    return result;\n  }\n\n  /** Asserts that the heatmap object has been initialized. */\n  private _assertInitialized(): asserts this is {heatmap: google.maps.visualization.HeatmapLayer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.heatmap) {\n        throw Error(\n            'Cannot interact with a Google Map HeatmapLayer before it has been ' +\n            'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n}\n\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value: any): value is google.maps.LatLngLiteral {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\nimport {MapBaseLayer} from './map-base-layer';\nimport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nimport {MapCircle} from './map-circle/map-circle';\nimport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nimport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nimport {MapInfoWindow} from './map-info-window/map-info-window';\nimport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nimport {MapMarker} from './map-marker/map-marker';\nimport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nimport {MapPolygon} from './map-polygon/map-polygon';\nimport {MapPolyline} from './map-polyline/map-polyline';\nimport {MapRectangle} from './map-rectangle/map-rectangle';\nimport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nimport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nimport {MapHeatmapLayer} from './map-heatmap-layer/map-heatmap-layer';\n\nconst COMPONENTS = [\n  GoogleMap,\n  MapBaseLayer,\n  MapBicyclingLayer,\n  MapCircle,\n  MapDirectionsRenderer,\n  MapGroundOverlay,\n  MapInfoWindow,\n  MapKmlLayer,\n  MapMarker,\n  MapMarkerClusterer,\n  MapPolygon,\n  MapPolyline,\n  MapRectangle,\n  MapTrafficLayer,\n  MapTransitLayer,\n  MapHeatmapLayer,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class GoogleMapsModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapDirectionsResponse {\n  status: google.maps.DirectionsStatus;\n  result?: google.maps.DirectionsResult;\n}\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n@Injectable({providedIn: 'root'})\nexport class MapDirectionsService {\n  private _directionsService: google.maps.DirectionsService|undefined;\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request: google.maps.DirectionsRequest): Observable<MapDirectionsResponse> {\n    return new Observable(observer => {\n      // Initialize the `DirectionsService` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._directionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      }\n\n      const callback =\n          (\n            result: google.maps.DirectionsResult|undefined,\n            status: google.maps.DirectionsStatus\n          ) => {\n        this._ngZone.run(() => {\n          observer.next({result, status});\n          observer.complete();\n        });\n      };\n      this._directionsService.route(request, callback);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapGeocoderResponse {\n  status: google.maps.GeocoderStatus;\n  results: google.maps.GeocoderResult[];\n}\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n@Injectable({providedIn: 'root'})\nexport class MapGeocoder {\n  private _geocoder: google.maps.Geocoder|undefined;\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request: google.maps.GeocoderRequest): Observable<MapGeocoderResponse> {\n    return new Observable(observer => {\n      // Initialize the `Geocoder` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      }\n\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({results, status});\n          observer.complete();\n        });\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {GoogleMap} from './google-map/google-map';\nexport {GoogleMapsModule} from './google-maps-module';\nexport {MapAnchorPoint} from './map-anchor-point';\nexport {MapBaseLayer} from './map-base-layer';\nexport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nexport {MapCircle} from './map-circle/map-circle';\nexport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nexport {\n  MapDirectionsService,\n  MapDirectionsResponse,\n} from './map-directions-renderer/map-directions-service';\nexport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nexport {MapInfoWindow} from './map-info-window/map-info-window';\nexport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nexport {MapMarker} from './map-marker/map-marker';\nexport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nexport {MapPolygon} from './map-polygon/map-polygon';\nexport {MapPolyline} from './map-polyline/map-polyline';\nexport {MapRectangle} from './map-rectangle/map-rectangle';\nexport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nexport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nexport {MapHeatmapLayer, HeatmapData} from './map-heatmap-layer/map-heatmap-layer';\nexport {MapGeocoder, MapGeocoderResponse} from './map-geocoder/map-geocoder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}