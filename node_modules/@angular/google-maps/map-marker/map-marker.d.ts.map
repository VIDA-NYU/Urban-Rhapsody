{"version":3,"file":"map-marker.d.ts","sources":["map-marker.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// <reference types=\"googlemaps\" />\nimport { OnDestroy, OnInit, NgZone, OnChanges, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMap } from '../google-map/google-map';\nimport { MapAnchorPoint } from '../map-anchor-point';\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport declare const DEFAULT_MARKER_OPTIONS: {\n    position: {\n        lat: number;\n        lng: number;\n    };\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nexport declare class MapMarker implements OnInit, OnChanges, OnDestroy, MapAnchorPoint {\n    private readonly _googleMap;\n    private _ngZone;\n    private _eventManager;\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title: string);\n    private _title;\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position: google.maps.LatLngLiteral | google.maps.LatLng);\n    private _position;\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label: string | google.maps.MarkerLabel);\n    private _label;\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable: boolean);\n    private _clickable;\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options: google.maps.MarkerOptions);\n    private _options;\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon: string | google.maps.Icon | google.maps.Symbol);\n    private _icon;\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value: boolean);\n    private _visible;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n    readonly animationChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n    readonly mapClick: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n    readonly clickableChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n    readonly cursorChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n    readonly mapDblclick: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n    readonly mapDrag: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n    readonly mapDragend: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n    readonly draggableChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n    readonly mapDragstart: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n    readonly flatChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n    readonly iconChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n    readonly mapMousedown: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n    readonly mapMouseout: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n    readonly mapMouseover: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n    readonly mapMouseup: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n    readonly positionChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n    readonly mapRightclick: Observable<google.maps.MapMouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n    readonly shapeChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n    readonly titleChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n    readonly visibleChanged: Observable<void>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n    readonly zindexChanged: Observable<void>;\n    /**\n     * The underlying google.maps.Marker object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n     */\n    marker?: google.maps.Marker;\n    constructor(_googleMap: GoogleMap, _ngZone: NgZone);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation(): google.maps.Animation | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable(): boolean;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor(): string | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable(): boolean;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon(): string | google.maps.Icon | google.maps.Symbol | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel(): google.maps.MarkerLabel | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity(): number | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition(): google.maps.LatLng | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape(): google.maps.MarkerShape | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle(): string | null;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible(): boolean;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex(): number | null;\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor(): google.maps.MVCObject;\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    private _combineOptions;\n    private _assertInitialized;\n}\n"]}